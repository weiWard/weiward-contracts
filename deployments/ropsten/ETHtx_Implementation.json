{
  "address": "0x4D19Cb7b562c355568Fb945912f816A09882C98e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeLogic_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "FeeLogicSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Recovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeLogic",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feeLogic_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter_",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "setFeeLogic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "setMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0b3aadbc918e549a5181fe7f3eea03cd58959788ecfeb2305debe55c960e14b2",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x5757Dd711EaE80e181E07CdbCe43359Ac1048394",
    "contractAddress": null,
    "transactionIndex": 12,
    "gasUsed": "1976395",
    "logsBloom": "0x
    "blockHash": "0xeff9a43af066e48794884de84ca50d7b1a73cb3c3a939ac6a67b5d9cec5d15ec",
    "transactionHash": "0x0b3aadbc918e549a5181fe7f3eea03cd58959788ecfeb2305debe55c960e14b2",
    "logs": [
      {
        "transactionIndex": 12,
        "blockNumber": 9985326,
        "transactionHash": "0x0b3aadbc918e549a5181fe7f3eea03cd58959788ecfeb2305debe55c960e14b2",
        "address": "0x4D19Cb7b562c355568Fb945912f816A09882C98e",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c"
        ],
        "data": "0x",
        "logIndex": 10,
        "blockHash": "0xeff9a43af066e48794884de84ca50d7b1a73cb3c3a939ac6a67b5d9cec5d15ec"
      },
      {
        "transactionIndex": 12,
        "blockNumber": 9985326,
        "transactionHash": "0x0b3aadbc918e549a5181fe7f3eea03cd58959788ecfeb2305debe55c960e14b2",
        "address": "0x4D19Cb7b562c355568Fb945912f816A09882C98e",
        "topics": [
          "0x02b23d62d8f733974f8cb13eb804b20135521322b70997c991fc01406632389f",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x",
        "logIndex": 11,
        "blockHash": "0xeff9a43af066e48794884de84ca50d7b1a73cb3c3a939ac6a67b5d9cec5d15ec"
      },
      {
        "transactionIndex": 12,
        "blockNumber": 9985326,
        "transactionHash": "0x0b3aadbc918e549a5181fe7f3eea03cd58959788ecfeb2305debe55c960e14b2",
        "address": "0x4D19Cb7b562c355568Fb945912f816A09882C98e",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c",
          "0x0000000000000000000000005757dd711eae80e181e07cdbce43359ac1048394"
        ],
        "data": "0x",
        "logIndex": 12,
        "blockHash": "0xeff9a43af066e48794884de84ca50d7b1a73cb3c3a939ac6a67b5d9cec5d15ec"
      }
    ],
    "blockNumber": 9985326,
    "cumulativeGasUsed": "3910708",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5757Dd711EaE80e181E07CdbCe43359Ac1048394",
    "0x5ff01Fdf3a100bb7c39384d4715E250B7daD1D36",
    "0x0000000000000000000000000000000000000000"
  ],
  "solcInputHash": "d866fd3a9c665c3159ffcb94310e6171",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeLogic_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"FeeLogicSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeLogic_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter_\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setFeeLogic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"feeLogic()\":{\"details\":\"Returns the feeLogic handler address.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token. Overload it to change.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name. Overload it to change.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/ETHtx.sol\":\"ETHtx\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/Initializable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xba7ba5b188c0b27489bad1efee8d8b1dcebb502785192b22e3d69824a802983d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity >=0.4.24 <0.8.0;\\n\\nimport \\\"../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /// @dev Returns true if and only if the function is running in the constructor\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1fd568d8b8ca285c801fbd1d3f40f848434d850a682c0273786cada3e0b84057\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\nimport \\\"../proxy/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal initializer {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x20f2d2dc1bd6616bf85e695f9139c2a949cfc4bd8e2f4de0c5d0f9bb54f8df9e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc77dd6233a82c7c6e3dc49da8f3456baa00ecd3ea4dfa9222002a9aebf155dcd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07779badf9435bce9a95e4527e892d83a2baae798ba87203db0b22679b40ef35\",\"license\":\"MIT\"},\"contracts/rewards/interfaces/IFeeLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ninterface IFeeLogic {\\n\\t/* Views */\\n\\n\\tfunction exemptsAt(uint256 index) external view returns (address);\\n\\n\\tfunction exemptsLength() external view returns (uint256);\\n\\n\\tfunction feeRate()\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint128 numerator, uint128 denominator);\\n\\n\\tfunction getFee(\\n\\t\\taddress sender,\\n\\t\\taddress recipient_,\\n\\t\\tuint256 amount\\n\\t) external view returns (uint256);\\n\\n\\tfunction isExempt(address account) external view returns (bool);\\n\\n\\tfunction recipient() external view returns (address);\\n\\n\\tfunction undoFee(\\n\\t\\taddress sender,\\n\\t\\taddress recipient_,\\n\\t\\tuint256 amount\\n\\t) external view returns (uint256);\\n\\n\\t/* Mutators */\\n\\n\\tfunction notify(uint256 amount) external;\\n\\n\\tfunction setExempt(address account, bool isExempt_) external;\\n\\n\\tfunction setFeeRate(uint128 numerator, uint128 denominator) external;\\n\\n\\tfunction setRecipient(address account) external;\\n\\n\\t/* Events */\\n\\n\\tevent ExemptAdded(address indexed author, address indexed account);\\n\\tevent ExemptRemoved(address indexed author, address indexed account);\\n\\tevent FeeRateSet(\\n\\t\\taddress indexed author,\\n\\t\\tuint128 numerator,\\n\\t\\tuint128 denominator\\n\\t);\\n\\tevent RecipientSet(address indexed author, address indexed account);\\n}\\n\",\"keccak256\":\"0xe12bc2fd0100272765b8b27f408fe93e735477a47af2f6cd417936b0dc4f8273\",\"license\":\"MIT\"},\"contracts/tokens/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n/**\\n * Based on https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v3.3.0-solc-0.7/contracts/token/ERC20/ERC20.sol\\n *\\n * Changes:\\n * - Change _balances, _allowances, and _totalSupply from private to internal\\n * - Replace name, symbol, and decimals state with virtual functions.\\n * - Make all functions virtual\\n * - Reformat styling in line with this repository.\\n */\\n\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20 {\\n\\tusing SafeMath for uint256;\\n\\n\\t/* Mutable Internal State */\\n\\n\\tmapping(address => uint256) internal _balances;\\n\\n\\tmapping(address => mapping(address => uint256)) internal _allowances;\\n\\n\\tuint256 internal _totalSupply;\\n\\n\\t// solhint-disable-next-line func-name-mixedcase\\n\\tfunction __ERC20_init() internal initializer {\\n\\t\\t__Context_init_unchained();\\n\\t\\t__ERC20_init_unchained();\\n\\t}\\n\\n\\t// solhint-disable-next-line func-name-mixedcase\\n\\tfunction __ERC20_init_unchained() internal initializer {\\n\\t\\treturn;\\n\\t}\\n\\n\\t/**\\n\\t * @dev Returns the name of the token. Overload it to change.\\n\\t */\\n\\tfunction name() public view virtual returns (string memory) {\\n\\t\\treturn \\\"ERC20\\\";\\n\\t}\\n\\n\\t/**\\n\\t * @dev Returns the symbol of the token, usually a shorter version of the\\n\\t * name. Overload it to change.\\n\\t */\\n\\tfunction symbol() public view virtual returns (string memory) {\\n\\t\\treturn \\\"ERC20\\\";\\n\\t}\\n\\n\\t/**\\n\\t * @dev Returns the number of decimals used to get its user representation.\\n\\t * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n\\t * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n\\t *\\n\\t * Tokens usually opt for a value of 18, imitating the relationship between\\n\\t * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n\\t * overridden;\\n\\t *\\n\\t * NOTE: This information is only used for _display_ purposes: it in\\n\\t * no way affects any of the arithmetic of the contract, including\\n\\t * {IERC20-balanceOf} and {IERC20-transfer}.\\n\\t */\\n\\tfunction decimals() public view virtual returns (uint8) {\\n\\t\\treturn 18;\\n\\t}\\n\\n\\t/**\\n\\t * @dev See {IERC20-totalSupply}.\\n\\t */\\n\\tfunction totalSupply() public view virtual override returns (uint256) {\\n\\t\\treturn _totalSupply;\\n\\t}\\n\\n\\t/**\\n\\t * @dev See {IERC20-balanceOf}.\\n\\t */\\n\\tfunction balanceOf(address account)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\treturn _balances[account];\\n\\t}\\n\\n\\t/**\\n\\t * @dev See {IERC20-transfer}.\\n\\t *\\n\\t * Requirements:\\n\\t *\\n\\t * - `recipient` cannot be the zero address.\\n\\t * - the caller must have a balance of at least `amount`.\\n\\t */\\n\\tfunction transfer(address recipient, uint256 amount)\\n\\t\\tpublic\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\t_transfer(_msgSender(), recipient, amount);\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t * @dev See {IERC20-allowance}.\\n\\t */\\n\\tfunction allowance(address owner, address spender)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\treturn _allowances[owner][spender];\\n\\t}\\n\\n\\t/**\\n\\t * @dev See {IERC20-approve}.\\n\\t *\\n\\t * Requirements:\\n\\t *\\n\\t * - `spender` cannot be the zero address.\\n\\t */\\n\\tfunction approve(address spender, uint256 amount)\\n\\t\\tpublic\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\t_approve(_msgSender(), spender, amount);\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t * @dev See {IERC20-transferFrom}.\\n\\t *\\n\\t * Emits an {Approval} event indicating the updated allowance. This is not\\n\\t * required by the EIP. See the note at the beginning of {ERC20}.\\n\\t *\\n\\t * Requirements:\\n\\t *\\n\\t * - `sender` and `recipient` cannot be the zero address.\\n\\t * - `sender` must have a balance of at least `amount`.\\n\\t * - the caller must have allowance for ``sender``'s tokens of at least\\n\\t * `amount`.\\n\\t */\\n\\tfunction transferFrom(\\n\\t\\taddress sender,\\n\\t\\taddress recipient,\\n\\t\\tuint256 amount\\n\\t) public virtual override returns (bool) {\\n\\t\\t_transfer(sender, recipient, amount);\\n\\t\\t_approve(\\n\\t\\t\\tsender,\\n\\t\\t\\t_msgSender(),\\n\\t\\t\\t_allowances[sender][_msgSender()].sub(\\n\\t\\t\\t\\tamount,\\n\\t\\t\\t\\t\\\"ERC20: transfer amount exceeds allowance\\\"\\n\\t\\t\\t)\\n\\t\\t);\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t * @dev Atomically increases the allowance granted to `spender` by the caller.\\n\\t *\\n\\t * This is an alternative to {approve} that can be used as a mitigation for\\n\\t * problems described in {IERC20-approve}.\\n\\t *\\n\\t * Emits an {Approval} event indicating the updated allowance.\\n\\t *\\n\\t * Requirements:\\n\\t *\\n\\t * - `spender` cannot be the zero address.\\n\\t */\\n\\tfunction increaseAllowance(address spender, uint256 addedValue)\\n\\t\\tpublic\\n\\t\\tvirtual\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\t_approve(\\n\\t\\t\\t_msgSender(),\\n\\t\\t\\tspender,\\n\\t\\t\\t_allowances[_msgSender()][spender].add(addedValue)\\n\\t\\t);\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n\\t *\\n\\t * This is an alternative to {approve} that can be used as a mitigation for\\n\\t * problems described in {IERC20-approve}.\\n\\t *\\n\\t * Emits an {Approval} event indicating the updated allowance.\\n\\t *\\n\\t * Requirements:\\n\\t *\\n\\t * - `spender` cannot be the zero address.\\n\\t * - `spender` must have allowance for the caller of at least\\n\\t * `subtractedValue`.\\n\\t */\\n\\tfunction decreaseAllowance(address spender, uint256 subtractedValue)\\n\\t\\tpublic\\n\\t\\tvirtual\\n\\t\\treturns (bool)\\n\\t{\\n\\t\\t_approve(\\n\\t\\t\\t_msgSender(),\\n\\t\\t\\tspender,\\n\\t\\t\\t_allowances[_msgSender()][spender].sub(\\n\\t\\t\\t\\tsubtractedValue,\\n\\t\\t\\t\\t\\\"ERC20: decreased allowance below zero\\\"\\n\\t\\t\\t)\\n\\t\\t);\\n\\t\\treturn true;\\n\\t}\\n\\n\\t/**\\n\\t * @dev Moves tokens `amount` from `sender` to `recipient`.\\n\\t *\\n\\t * This is internal function is equivalent to {transfer}, and can be used to\\n\\t * e.g. implement automatic token fees, slashing mechanisms, etc.\\n\\t *\\n\\t * Emits a {Transfer} event.\\n\\t *\\n\\t * Requirements:\\n\\t *\\n\\t * - `sender` cannot be the zero address.\\n\\t * - `recipient` cannot be the zero address.\\n\\t * - `sender` must have a balance of at least `amount`.\\n\\t */\\n\\tfunction _transfer(\\n\\t\\taddress sender,\\n\\t\\taddress recipient,\\n\\t\\tuint256 amount\\n\\t) internal virtual {\\n\\t\\trequire(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n\\t\\trequire(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n\\t\\t_beforeTokenTransfer(sender, recipient, amount);\\n\\n\\t\\t_balances[sender] = _balances[sender].sub(\\n\\t\\t\\tamount,\\n\\t\\t\\t\\\"ERC20: transfer amount exceeds balance\\\"\\n\\t\\t);\\n\\n\\t\\t_balances[recipient] = _balances[recipient].add(amount);\\n\\n\\t\\temit Transfer(sender, recipient, amount);\\n\\t}\\n\\n\\t/** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n\\t * the total supply.\\n\\t *\\n\\t * Emits a {Transfer} event with `from` set to the zero address.\\n\\t *\\n\\t * Requirements:\\n\\t *\\n\\t * - `to` cannot be the zero address.\\n\\t */\\n\\tfunction _mint(address account, uint256 amount) internal virtual {\\n\\t\\trequire(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n\\t\\t_beforeTokenTransfer(address(0), account, amount);\\n\\n\\t\\t_totalSupply = _totalSupply.add(amount);\\n\\t\\t_balances[account] = _balances[account].add(amount);\\n\\t\\temit Transfer(address(0), account, amount);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Destroys `amount` tokens from `account`, reducing the\\n\\t * total supply.\\n\\t *\\n\\t * Emits a {Transfer} event with `to` set to the zero address.\\n\\t *\\n\\t * Requirements:\\n\\t *\\n\\t * - `account` cannot be the zero address.\\n\\t * - `account` must have at least `amount` tokens.\\n\\t */\\n\\tfunction _burn(address account, uint256 amount) internal virtual {\\n\\t\\trequire(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n\\t\\t_beforeTokenTransfer(account, address(0), amount);\\n\\n\\t\\t_balances[account] = _balances[account].sub(\\n\\t\\t\\tamount,\\n\\t\\t\\t\\\"ERC20: burn amount exceeds balance\\\"\\n\\t\\t);\\n\\n\\t\\t_totalSupply = _totalSupply.sub(amount);\\n\\n\\t\\temit Transfer(account, address(0), amount);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n\\t *\\n\\t * This internal function is equivalent to `approve`, and can be used to\\n\\t * e.g. set automatic allowances for certain subsystems, etc.\\n\\t *\\n\\t * Emits an {Approval} event.\\n\\t *\\n\\t * Requirements:\\n\\t *\\n\\t * - `owner` cannot be the zero address.\\n\\t * - `spender` cannot be the zero address.\\n\\t */\\n\\tfunction _approve(\\n\\t\\taddress owner,\\n\\t\\taddress spender,\\n\\t\\tuint256 amount\\n\\t) internal virtual {\\n\\t\\trequire(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n\\t\\trequire(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n\\t\\t_allowances[owner][spender] = amount;\\n\\t\\temit Approval(owner, spender, amount);\\n\\t}\\n\\n\\t/**\\n\\t * @dev Hook that is called before any transfer of tokens. This includes\\n\\t * minting and burning.\\n\\t *\\n\\t * Calling conditions:\\n\\t *\\n\\t * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n\\t * will be to transferred to `to`.\\n\\t * - when `from` is zero, `amount` tokens will be minted for `to`.\\n\\t * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n\\t * - `from` and `to` are never both zero.\\n\\t *\\n\\t * To learn more about hooks, head to xref:ROOT:extending-contracts. adoc#using-hooks[Using Hooks].\\n\\t */\\n\\tfunction _beforeTokenTransfer(\\n\\t\\taddress, /* from */\\n\\t\\taddress, /* to */\\n\\t\\tuint256 /* amount */\\n\\t) internal virtual {\\n\\t\\treturn;\\n\\t}\\n\\n\\tuint256[47] private __gap;\\n}\\n\",\"keccak256\":\"0x92c78cb07a943ddbdea2397f238d4f07502d8877bdc38f7296861d37945605bb\",\"license\":\"MIT\"},\"contracts/tokens/ERC20TxFee/ERC20TxFeeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\\\";\\n\\nimport \\\"../ERC20/ERC20Upgradeable.sol\\\";\\nimport \\\"../interfaces/IERC20TxFee.sol\\\";\\nimport \\\"../../rewards/interfaces/IFeeLogic.sol\\\";\\n\\ncontract ERC20TxFeeUpgradeable is\\n\\tInitializable,\\n\\tContextUpgradeable,\\n\\tERC20Upgradeable,\\n\\tIERC20TxFee\\n{\\n\\tusing SafeMath for uint256;\\n\\n\\t/* Mutable Internal State */\\n\\n\\taddress internal _feeLogic;\\n\\n\\t// solhint-disable-next-line func-name-mixedcase\\n\\tfunction __ERC20TxFee_init(address feeLogic_) internal initializer {\\n\\t\\t__ERC20_init();\\n\\t\\t__ERC20TxFee_init_unchained(feeLogic_);\\n\\t}\\n\\n\\t// solhint-disable-next-line func-name-mixedcase\\n\\tfunction __ERC20TxFee_init_unchained(address feeLogic_)\\n\\t\\tinternal\\n\\t\\tinitializer\\n\\t{\\n\\t\\trequire(feeLogic_ != address(0), \\\"ERC20TxFee: feeLogic zero address\\\");\\n\\t\\t__ERC20_init_unchained();\\n\\t\\t_feeLogic = feeLogic_;\\n\\t}\\n\\n\\t/* Public Views */\\n\\n\\t/**\\n\\t * @dev Returns the feeLogic handler address.\\n\\t */\\n\\tfunction feeLogic() public view virtual override returns (address) {\\n\\t\\treturn _feeLogic;\\n\\t}\\n\\n\\t/* Internal Mutators */\\n\\n\\t/**\\n\\t * @dev Overrides {ERC20-_transfer} to implement a fee on transfers.\\n\\t *\\n\\t * Emits a {Transfer} event. Emits a second {Transfer} event for the fee.\\n\\t *\\n\\t * Requirements:\\n\\t *\\n\\t * - `sender` cannot be the zero address.\\n\\t * - `recipient` cannot be the zero address.\\n\\t * - `sender` must have a balance of at least `amount`.\\n\\t * - `_feeLogic` implements {IFeeLogic}\\n\\t */\\n\\tfunction _transfer(\\n\\t\\taddress sender,\\n\\t\\taddress recipient,\\n\\t\\tuint256 amount\\n\\t) internal virtual override {\\n\\t\\trequire(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n\\t\\trequire(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n\\t\\t_beforeTokenTransfer(sender, recipient, amount);\\n\\n\\t\\t_balances[sender] = _balances[sender].sub(\\n\\t\\t\\tamount,\\n\\t\\t\\t\\\"ERC20: transfer amount exceeds balance\\\"\\n\\t\\t);\\n\\n\\t\\tIFeeLogic feeHandler = IFeeLogic(_feeLogic);\\n\\t\\tuint256 fee = feeHandler.getFee(sender, recipient, amount);\\n\\t\\tuint256 amountSubFee = amount.sub(fee);\\n\\n\\t\\t_balances[recipient] = _balances[recipient].add(amountSubFee);\\n\\t\\temit Transfer(sender, recipient, amountSubFee);\\n\\n\\t\\tif (fee != 0) {\\n\\t\\t\\taddress feeRecipient = feeHandler.recipient();\\n\\t\\t\\t_balances[feeRecipient] = _balances[feeRecipient].add(fee);\\n\\t\\t\\temit Transfer(sender, feeRecipient, fee);\\n\\t\\t\\tfeeHandler.notify(fee);\\n\\t\\t}\\n\\t}\\n\\n\\tuint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xcfd20e626b29b4611023c0d1421f3a2863c4693a64f659b32cd32690394bb414\",\"license\":\"MIT\"},\"contracts/tokens/ETHtx.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\n\\nimport \\\"./ERC20TxFee/ERC20TxFeeUpgradeable.sol\\\";\\nimport \\\"./interfaces/IETHtx.sol\\\";\\n\\ncontract ETHtx is\\n\\tInitializable,\\n\\tContextUpgradeable,\\n\\tOwnableUpgradeable,\\n\\tPausableUpgradeable,\\n\\tERC20TxFeeUpgradeable,\\n\\tIETHtx\\n{\\n\\tusing SafeERC20 for IERC20;\\n\\n\\t/* Mutable Internal State */\\n\\n\\taddress internal _minter;\\n\\n\\t/* Constructor */\\n\\n\\tconstructor(\\n\\t\\taddress owner_,\\n\\t\\taddress feeLogic_,\\n\\t\\taddress minter_\\n\\t) {\\n\\t\\tinit(owner_, feeLogic_, minter_);\\n\\t}\\n\\n\\t/* Initializer */\\n\\n\\tfunction init(\\n\\t\\taddress owner_,\\n\\t\\taddress feeLogic_,\\n\\t\\taddress minter_\\n\\t) public virtual initializer {\\n\\t\\t__Context_init_unchained();\\n\\t\\t__Ownable_init_unchained();\\n\\t\\t__Pausable_init_unchained();\\n\\t\\t__ERC20TxFee_init_unchained(feeLogic_);\\n\\n\\t\\tsetMinter(minter_);\\n\\n\\t\\tif (owner_ != owner()) {\\n\\t\\t\\ttransferOwnership(owner_);\\n\\t\\t}\\n\\t}\\n\\n\\t/* Modifiers */\\n\\n\\tmodifier onlyMinter {\\n\\t\\trequire(_msgSender() == minter(), \\\"ETHtx: caller is not the minter\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t/* External Views */\\n\\n\\tfunction minter() public view virtual override returns (address) {\\n\\t\\treturn _minter;\\n\\t}\\n\\n\\tfunction name() public view virtual override returns (string memory) {\\n\\t\\treturn \\\"Ethereum Transaction\\\";\\n\\t}\\n\\n\\tfunction symbol() public view virtual override returns (string memory) {\\n\\t\\treturn \\\"ETHtx\\\";\\n\\t}\\n\\n\\t/* External Mutators */\\n\\n\\tfunction burn(address account, uint256 amount)\\n\\t\\texternal\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\tonlyMinter\\n\\t\\twhenNotPaused\\n\\t{\\n\\t\\t_burn(account, amount);\\n\\t}\\n\\n\\tfunction mint(address account, uint256 amount)\\n\\t\\texternal\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\tonlyMinter\\n\\t\\twhenNotPaused\\n\\t{\\n\\t\\t_mint(account, amount);\\n\\t}\\n\\n\\tfunction pause() external virtual override onlyOwner whenNotPaused {\\n\\t\\t_pause();\\n\\t}\\n\\n\\tfunction recoverERC20(\\n\\t\\taddress token,\\n\\t\\taddress to,\\n\\t\\tuint256 amount\\n\\t) external virtual override onlyOwner {\\n\\t\\tIERC20(token).safeTransfer(to, amount);\\n\\t\\temit Recovered(_msgSender(), token, to, amount);\\n\\t}\\n\\n\\tfunction unpause() external virtual override onlyOwner whenPaused {\\n\\t\\t_unpause();\\n\\t}\\n\\n\\t/* Public Mutators */\\n\\n\\tfunction setFeeLogic(address account) public virtual override onlyOwner {\\n\\t\\trequire(account != address(0), \\\"ETHtx: feeLogic zero address\\\");\\n\\t\\t_feeLogic = account;\\n\\t\\temit FeeLogicSet(_msgSender(), account);\\n\\t}\\n\\n\\tfunction setMinter(address account) public virtual override onlyOwner {\\n\\t\\t_minter = account;\\n\\t\\temit MinterSet(_msgSender(), account);\\n\\t}\\n}\\n\",\"keccak256\":\"0xeefbbc506d7cd7fccf7f52ee221b7ea3d8fa545ba84f26c060ec4b9d7507d3ef\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IERC20TxFee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ninterface IERC20TxFee {\\n\\t/* Views */\\n\\n\\tfunction feeLogic() external view returns (address);\\n}\\n\",\"keccak256\":\"0x22e7908ab45d33c317ecba5cd59db1192dd6acd34bc608f6b65ff22c05fe7dd1\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IETHtx.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ninterface IETHtx {\\n\\t/* Views */\\n\\n\\tfunction minter() external view returns (address);\\n\\n\\t/* Mutators */\\n\\n\\tfunction burn(address account, uint256 amount) external;\\n\\n\\tfunction mint(address account, uint256 amount) external;\\n\\n\\tfunction pause() external;\\n\\n\\tfunction recoverERC20(\\n\\t\\taddress token,\\n\\t\\taddress to,\\n\\t\\tuint256 amount\\n\\t) external;\\n\\n\\tfunction setFeeLogic(address account) external;\\n\\n\\tfunction setMinter(address account) external;\\n\\n\\tfunction unpause() external;\\n\\n\\t/* Events */\\n\\n\\tevent FeeLogicSet(address indexed author, address indexed account);\\n\\tevent MinterSet(address indexed author, address indexed account);\\n\\tevent Recovered(\\n\\t\\taddress indexed author,\\n\\t\\taddress indexed token,\\n\\t\\taddress indexed to,\\n\\t\\tuint256 amount\\n\\t);\\n}\\n\",\"keccak256\":\"0x7e117a1038148533589396b5d689c1b74b1823c304a2435de33273449b3367c7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200284a3803806200284a833981810160405260608110156200003757600080fd5b5080516020820151604090920151909190620000558383836200005e565b505050620006cc565b600054610100900460ff16806200007a57506200007a6200016d565b8062000089575060005460ff16155b620000c65760405162461bcd60e51b815260040180806020018281038252602e815260200180620027dc602e913960400191505060405180910390fd5b600054610100900460ff16158015620000f2576000805460ff1961ff0019909116610100171660011790555b620000fc6200018b565b6200010662000235565b6200011062000327565b6200011b83620003da565b6200012682620004f1565b62000130620005b9565b6001600160a01b0316846001600160a01b03161462000154576200015484620005c8565b801562000167576000805461ff00191690555b50505050565b60006200018530620006c260201b62000fba1760201c565b15905090565b600054610100900460ff1680620001a75750620001a76200016d565b80620001b6575060005460ff16155b620001f35760405162461bcd60e51b815260040180806020018281038252602e815260200180620027dc602e913960400191505060405180910390fd5b600054610100900460ff161580156200021f576000805460ff1961ff0019909116610100171660011790555b801562000232576000805461ff00191690555b50565b600054610100900460ff1680620002515750620002516200016d565b8062000260575060005460ff16155b6200029d5760405162461bcd60e51b815260040180806020018281038252602e815260200180620027dc602e913960400191505060405180910390fd5b600054610100900460ff16158015620002c9576000805460ff1961ff0019909116610100171660011790555b6000620002d5620006c8565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000906000805160206200282a833981519152908290a350801562000232576000805461ff001916905550565b600054610100900460ff1680620003435750620003436200016d565b8062000352575060005460ff16155b6200038f5760405162461bcd60e51b815260040180806020018281038252602e815260200180620027dc602e913960400191505060405180910390fd5b600054610100900460ff16158015620003bb576000805460ff1961ff0019909116610100171660011790555b6065805460ff19169055801562000232576000805461ff001916905550565b600054610100900460ff1680620003f65750620003f66200016d565b8062000405575060005460ff16155b620004425760405162461bcd60e51b815260040180806020018281038252602e815260200180620027dc602e913960400191505060405180910390fd5b600054610100900460ff161580156200046e576000805460ff1961ff0019909116610100171660011790555b6001600160a01b038216620004b55760405162461bcd60e51b8152600401808060200182810382526021815260200180620027bb6021913960400191505060405180910390fd5b620004bf6200018b565b60c980546001600160a01b0319166001600160a01b0384161790558015620004ed576000805461ff00191690555b5050565b620004fb620006c8565b6001600160a01b03166200050e620005b9565b6001600160a01b03161462000559576040805162461bcd60e51b815260206004820181905260248201526000805160206200280a833981519152604482015290519081900360640190fd5b60fb80546001600160a01b0319166001600160a01b03831690811790915562000581620006c8565b6001600160a01b03167f02b23d62d8f733974f8cb13eb804b20135521322b70997c991fc01406632389f60405160405180910390a350565b6033546001600160a01b031690565b620005d2620006c8565b6001600160a01b0316620005e5620005b9565b6001600160a01b03161462000630576040805162461bcd60e51b815260206004820181905260248201526000805160206200280a833981519152604482015290519081900360640190fd5b6001600160a01b038116620006775760405162461bcd60e51b8152600401808060200182810382526026815260200180620027956026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216906000805160206200282a83398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b3390565b6120b980620006dc6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80635028db1a116100de57806395d89b4111610097578063a9059cbb11610071578063a9059cbb1461046b578063dd62ed3e14610497578063f2fde38b146104c5578063fca3b5aa146104eb57610173565b806395d89b411461040b5780639dc29fac14610413578063a457c2d71461043f57610173565b80635028db1a146103bd5780635c975abb146103c557806370a08231146103cd578063715018a6146103f35780638456cb59146103fb5780638da5cb5b1461040357610173565b806323b872dd1161013057806323b872dd146102e3578063313ce5671461031957806339509351146103375780633c85e454146103635780633f4ba83a1461038957806340c10f191461039157610173565b806306fdde031461017857806307546172146101f5578063095ea7b3146102195780631171bda91461025957806318160ddd14610291578063184b9559146102ab575b600080fd5b610180610511565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ba5781810151838201526020016101a2565b50505050905090810190601f1680156101e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fd61053f565b604080516001600160a01b039092168252519081900360200190f35b6102456004803603604081101561022f57600080fd5b506001600160a01b03813516906020013561054e565b604080519115158252519081900360200190f35b61028f6004803603606081101561026f57600080fd5b506001600160a01b0381358116916020810135909116906040013561056b565b005b610299610642565b60408051918252519081900360200190f35b61028f600480360360608110156102c157600080fd5b506001600160a01b038135811691602081013582169160409091013516610648565b610245600480360360608110156102f957600080fd5b506001600160a01b03813581169160208101359091169060400135610740565b6103216107c8565b6040805160ff9092168252519081900360200190f35b6102456004803603604081101561034d57600080fd5b506001600160a01b0381351690602001356107cd565b61028f6004803603602081101561037957600080fd5b50356001600160a01b031661081b565b61028f610936565b61028f600480360360408110156103a757600080fd5b506001600160a01b0381351690602001356109f2565b6101fd610ac1565b610245610ad0565b610299600480360360208110156103e357600080fd5b50356001600160a01b0316610ad9565b61028f610af4565b61028f610ba0565b6101fd610c57565b610180610c66565b61028f6004803603604081101561042957600080fd5b506001600160a01b038135169060200135610c85565b6102456004803603604081101561045557600080fd5b506001600160a01b038135169060200135610d50565b6102456004803603604081101561048157600080fd5b506001600160a01b038135169060200135610db8565b610299600480360360408110156104ad57600080fd5b506001600160a01b0381358116916020013516610dcc565b61028f600480360360208110156104db57600080fd5b50356001600160a01b0316610df7565b61028f6004803603602081101561050157600080fd5b50356001600160a01b0316610efa565b60408051808201909152601481527322ba3432b932bab6902a3930b739b0b1ba34b7b760611b602082015290565b60fb546001600160a01b031690565b600061056261055b610fc0565b8484610fc4565b50600192915050565b610573610fc0565b6001600160a01b0316610584610c57565b6001600160a01b0316146105cd576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b6105e16001600160a01b03841683836110b0565b816001600160a01b0316836001600160a01b03166105fd610fc0565b6001600160a01b03167ffa6e44909e1c69606f847ee93c3339a424b53b345ed377c38ab410d32e7f70a7846040518082815260200191505060405180910390a4505050565b60995490565b600054610100900460ff16806106615750610661611107565b8061066f575060005460ff16155b6106aa5760405162461bcd60e51b815260040180806020018281038252602e815260200180611f35602e913960400191505060405180910390fd5b600054610100900460ff161580156106d5576000805460ff1961ff0019909116610100171660011790555b6106dd611118565b6106e56111ba565b6106ed6112b3565b6106f68361135e565b6106ff82610efa565b610707610c57565b6001600160a01b0316846001600160a01b0316146107285761072884610df7565b801561073a576000805461ff00191690555b50505050565b600061074d848484611468565b6107bd84610759610fc0565b6107b885604051806060016040528060288152602001611f63602891396001600160a01b038a16600090815260986020526040812090610797610fc0565b6001600160a01b031681526020810191909152604001600020549190611791565b610fc4565b5060015b9392505050565b601290565b60006105626107da610fc0565b846107b885609860006107eb610fc0565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611828565b610823610fc0565b6001600160a01b0316610834610c57565b6001600160a01b03161461087d576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b6001600160a01b0381166108d8576040805162461bcd60e51b815260206004820152601c60248201527f45544874783a206665654c6f676963207a65726f206164647265737300000000604482015290519081900360640190fd5b60c980546001600160a01b0319166001600160a01b0383169081179091556108fe610fc0565b6001600160a01b03167f62ed5f17e3b035a1692f4d2872793f3ad5394aa811ef5e7d770965e1c14a162b60405160405180910390a350565b61093e610fc0565b6001600160a01b031661094f610c57565b6001600160a01b031614610998576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b6109a0610ad0565b6109e8576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6109f0611882565b565b6109fa61053f565b6001600160a01b0316610a0b610fc0565b6001600160a01b031614610a66576040805162461bcd60e51b815260206004820152601f60248201527f45544874783a2063616c6c6572206973206e6f7420746865206d696e74657200604482015290519081900360640190fd5b610a6e610ad0565b15610ab3576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610abd8282611922565b5050565b60c9546001600160a01b031690565b60655460ff1690565b6001600160a01b031660009081526097602052604090205490565b610afc610fc0565b6001600160a01b0316610b0d610c57565b6001600160a01b031614610b56576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b610ba8610fc0565b6001600160a01b0316610bb9610c57565b6001600160a01b031614610c02576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b610c0a610ad0565b15610c4f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6109f0611a02565b6033546001600160a01b031690565b60408051808201909152600581526408aa890e8f60db1b602082015290565b610c8d61053f565b6001600160a01b0316610c9e610fc0565b6001600160a01b031614610cf9576040805162461bcd60e51b815260206004820152601f60248201527f45544874783a2063616c6c6572206973206e6f7420746865206d696e74657200604482015290519081900360640190fd5b610d01610ad0565b15610d46576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610abd8282611a85565b6000610562610d5d610fc0565b846107b88560405180606001604052806025815260200161205f6025913960986000610d87610fc0565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611791565b6000610562610dc5610fc0565b8484611468565b6001600160a01b03918216600090815260986020908152604080832093909416825291909152205490565b610dff610fc0565b6001600160a01b0316610e10610c57565b6001600160a01b031614610e59576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b6001600160a01b038116610e9e5760405162461bcd60e51b8152600401808060200182810382526026815260200180611e806026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b610f02610fc0565b6001600160a01b0316610f13610c57565b6001600160a01b031614610f5c576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b60fb80546001600160a01b0319166001600160a01b038316908117909155610f82610fc0565b6001600160a01b03167f02b23d62d8f733974f8cb13eb804b20135521322b70997c991fc01406632389f60405160405180910390a350565b3b151590565b3390565b6001600160a01b0383166110095760405162461bcd60e51b81526004018080602001828103825260248152602001806120116024913960400191505060405180910390fd5b6001600160a01b03821661104e5760405162461bcd60e51b8152600401808060200182810382526022815260200180611ea66022913960400191505060405180910390fd5b6001600160a01b03808416600081815260986020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611102908490611b6f565b505050565b600061111230610fba565b15905090565b600054610100900460ff16806111315750611131611107565b8061113f575060005460ff16155b61117a5760405162461bcd60e51b815260040180806020018281038252602e815260200180611f35602e913960400191505060405180910390fd5b600054610100900460ff161580156111a5576000805460ff1961ff0019909116610100171660011790555b80156111b7576000805461ff00191690555b50565b600054610100900460ff16806111d357506111d3611107565b806111e1575060005460ff16155b61121c5760405162461bcd60e51b815260040180806020018281038252602e815260200180611f35602e913960400191505060405180910390fd5b600054610100900460ff16158015611247576000805460ff1961ff0019909116610100171660011790555b6000611251610fc0565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156111b7576000805461ff001916905550565b600054610100900460ff16806112cc57506112cc611107565b806112da575060005460ff16155b6113155760405162461bcd60e51b815260040180806020018281038252602e815260200180611f35602e913960400191505060405180910390fd5b600054610100900460ff16158015611340576000805460ff1961ff0019909116610100171660011790555b6065805460ff1916905580156111b7576000805461ff001916905550565b600054610100900460ff16806113775750611377611107565b80611385575060005460ff16155b6113c05760405162461bcd60e51b815260040180806020018281038252602e815260200180611f35602e913960400191505060405180910390fd5b600054610100900460ff161580156113eb576000805460ff1961ff0019909116610100171660011790555b6001600160a01b0382166114305760405162461bcd60e51b8152600401808060200182810382526021815260200180611eee6021913960400191505060405180910390fd5b611438611118565b60c980546001600160a01b0319166001600160a01b0384161790558015610abd576000805461ff00191690555050565b6001600160a01b0383166114ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180611fec6025913960400191505060405180910390fd5b6001600160a01b0382166114f25760405162461bcd60e51b8152600401808060200182810382526023815260200180611e3b6023913960400191505060405180910390fd5b6114fd838383611102565b61153a81604051806060016040528060268152602001611ec8602691396001600160a01b0386166000908152609760205260409020549190611791565b6001600160a01b0380851660008181526097602090815260408083209590955560c9548551632f8e517960e21b81526004810194909452878516602485015260448401879052945194909316939092849263be3945e49260648083019392829003018186803b1580156115ac57600080fd5b505afa1580156115c0573d6000803e3d6000fd5b505050506040513d60208110156115d657600080fd5b5051905060006115e68483611c20565b6001600160a01b03861660009081526097602052604090205490915061160c9082611828565b6001600160a01b0380871660008181526097602090815260409182902094909455805185815290519193928a1692600080516020611fab83398151915292918290030190a38115611789576000836001600160a01b03166366d003ac6040518163ffffffff1660e01b815260040160206040518083038186803b15801561169257600080fd5b505afa1580156116a6573d6000803e3d6000fd5b505050506040513d60208110156116bc57600080fd5b50516001600160a01b0381166000908152609760205260409020549091506116e49084611828565b6001600160a01b0380831660008181526097602090815260409182902094909455805187815290519193928b1692600080516020611fab83398151915292918290030190a3836001600160a01b03166398d078b4846040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561176f57600080fd5b505af1158015611783573d6000803e3d6000fd5b50505050505b505050505050565b600081848411156118205760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117e55781810151838201526020016117cd565b50505050905090810190601f1680156118125780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156107c1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b61188a610ad0565b6118d2576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611905610fc0565b604080516001600160a01b039092168252519081900360200190a1565b6001600160a01b03821661197d576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61198960008383611102565b6099546119969082611828565b6099556001600160a01b0382166000908152609760205260409020546119bc9082611828565b6001600160a01b0383166000818152609760209081526040808320949094558351858152935192939192600080516020611fab8339815191529281900390910190a35050565b611a0a610ad0565b15611a4f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611905610fc0565b6001600160a01b038216611aca5760405162461bcd60e51b8152600401808060200182810382526021815260200180611fcb6021913960400191505060405180910390fd5b611ad682600083611102565b611b1381604051806060016040528060228152602001611e5e602291396001600160a01b0385166000908152609760205260409020549190611791565b6001600160a01b038316600090815260976020526040902055609954611b399082611c20565b6099556040805182815290516000916001600160a01b03851691600080516020611fab8339815191529181900360200190a35050565b6000611bc4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c629092919063ffffffff16565b80519091501561110257808060200190516020811015611be357600080fd5b50516111025760405162461bcd60e51b815260040180806020018281038252602a815260200180612035602a913960400191505060405180910390fd5b60006107c183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611791565b6060611c718484600085611c79565b949350505050565b606082471015611cba5760405162461bcd60e51b8152600401808060200182810382526026815260200180611f0f6026913960400191505060405180910390fd5b611cc385610fba565b611d14576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611d525780518252601f199092019160209182019101611d33565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611db4576040519150601f19603f3d011682016040523d82523d6000602084013e611db9565b606091505b5091509150611dc9828286611dd4565b979650505050505050565b60608315611de35750816107c1565b825115611df35782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156117e55781810151838201526020016117cd56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365455243323054784665653a206665654c6f676963207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122040f8b16cbd585a500135c8b321307be8c4935211bb9528c64a7dacb257f2ad7064736f6c634300070600334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243323054784665653a206665654c6f676963207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80635028db1a116100de57806395d89b4111610097578063a9059cbb11610071578063a9059cbb1461046b578063dd62ed3e14610497578063f2fde38b146104c5578063fca3b5aa146104eb57610173565b806395d89b411461040b5780639dc29fac14610413578063a457c2d71461043f57610173565b80635028db1a146103bd5780635c975abb146103c557806370a08231146103cd578063715018a6146103f35780638456cb59146103fb5780638da5cb5b1461040357610173565b806323b872dd1161013057806323b872dd146102e3578063313ce5671461031957806339509351146103375780633c85e454146103635780633f4ba83a1461038957806340c10f191461039157610173565b806306fdde031461017857806307546172146101f5578063095ea7b3146102195780631171bda91461025957806318160ddd14610291578063184b9559146102ab575b600080fd5b610180610511565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ba5781810151838201526020016101a2565b50505050905090810190601f1680156101e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101fd61053f565b604080516001600160a01b039092168252519081900360200190f35b6102456004803603604081101561022f57600080fd5b506001600160a01b03813516906020013561054e565b604080519115158252519081900360200190f35b61028f6004803603606081101561026f57600080fd5b506001600160a01b0381358116916020810135909116906040013561056b565b005b610299610642565b60408051918252519081900360200190f35b61028f600480360360608110156102c157600080fd5b506001600160a01b038135811691602081013582169160409091013516610648565b610245600480360360608110156102f957600080fd5b506001600160a01b03813581169160208101359091169060400135610740565b6103216107c8565b6040805160ff9092168252519081900360200190f35b6102456004803603604081101561034d57600080fd5b506001600160a01b0381351690602001356107cd565b61028f6004803603602081101561037957600080fd5b50356001600160a01b031661081b565b61028f610936565b61028f600480360360408110156103a757600080fd5b506001600160a01b0381351690602001356109f2565b6101fd610ac1565b610245610ad0565b610299600480360360208110156103e357600080fd5b50356001600160a01b0316610ad9565b61028f610af4565b61028f610ba0565b6101fd610c57565b610180610c66565b61028f6004803603604081101561042957600080fd5b506001600160a01b038135169060200135610c85565b6102456004803603604081101561045557600080fd5b506001600160a01b038135169060200135610d50565b6102456004803603604081101561048157600080fd5b506001600160a01b038135169060200135610db8565b610299600480360360408110156104ad57600080fd5b506001600160a01b0381358116916020013516610dcc565b61028f600480360360208110156104db57600080fd5b50356001600160a01b0316610df7565b61028f6004803603602081101561050157600080fd5b50356001600160a01b0316610efa565b60408051808201909152601481527322ba3432b932bab6902a3930b739b0b1ba34b7b760611b602082015290565b60fb546001600160a01b031690565b600061056261055b610fc0565b8484610fc4565b50600192915050565b610573610fc0565b6001600160a01b0316610584610c57565b6001600160a01b0316146105cd576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b6105e16001600160a01b03841683836110b0565b816001600160a01b0316836001600160a01b03166105fd610fc0565b6001600160a01b03167ffa6e44909e1c69606f847ee93c3339a424b53b345ed377c38ab410d32e7f70a7846040518082815260200191505060405180910390a4505050565b60995490565b600054610100900460ff16806106615750610661611107565b8061066f575060005460ff16155b6106aa5760405162461bcd60e51b815260040180806020018281038252602e815260200180611f35602e913960400191505060405180910390fd5b600054610100900460ff161580156106d5576000805460ff1961ff0019909116610100171660011790555b6106dd611118565b6106e56111ba565b6106ed6112b3565b6106f68361135e565b6106ff82610efa565b610707610c57565b6001600160a01b0316846001600160a01b0316146107285761072884610df7565b801561073a576000805461ff00191690555b50505050565b600061074d848484611468565b6107bd84610759610fc0565b6107b885604051806060016040528060288152602001611f63602891396001600160a01b038a16600090815260986020526040812090610797610fc0565b6001600160a01b031681526020810191909152604001600020549190611791565b610fc4565b5060015b9392505050565b601290565b60006105626107da610fc0565b846107b885609860006107eb610fc0565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490611828565b610823610fc0565b6001600160a01b0316610834610c57565b6001600160a01b03161461087d576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b6001600160a01b0381166108d8576040805162461bcd60e51b815260206004820152601c60248201527f45544874783a206665654c6f676963207a65726f206164647265737300000000604482015290519081900360640190fd5b60c980546001600160a01b0319166001600160a01b0383169081179091556108fe610fc0565b6001600160a01b03167f62ed5f17e3b035a1692f4d2872793f3ad5394aa811ef5e7d770965e1c14a162b60405160405180910390a350565b61093e610fc0565b6001600160a01b031661094f610c57565b6001600160a01b031614610998576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b6109a0610ad0565b6109e8576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6109f0611882565b565b6109fa61053f565b6001600160a01b0316610a0b610fc0565b6001600160a01b031614610a66576040805162461bcd60e51b815260206004820152601f60248201527f45544874783a2063616c6c6572206973206e6f7420746865206d696e74657200604482015290519081900360640190fd5b610a6e610ad0565b15610ab3576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610abd8282611922565b5050565b60c9546001600160a01b031690565b60655460ff1690565b6001600160a01b031660009081526097602052604090205490565b610afc610fc0565b6001600160a01b0316610b0d610c57565b6001600160a01b031614610b56576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b610ba8610fc0565b6001600160a01b0316610bb9610c57565b6001600160a01b031614610c02576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b610c0a610ad0565b15610c4f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6109f0611a02565b6033546001600160a01b031690565b60408051808201909152600581526408aa890e8f60db1b602082015290565b610c8d61053f565b6001600160a01b0316610c9e610fc0565b6001600160a01b031614610cf9576040805162461bcd60e51b815260206004820152601f60248201527f45544874783a2063616c6c6572206973206e6f7420746865206d696e74657200604482015290519081900360640190fd5b610d01610ad0565b15610d46576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610abd8282611a85565b6000610562610d5d610fc0565b846107b88560405180606001604052806025815260200161205f6025913960986000610d87610fc0565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611791565b6000610562610dc5610fc0565b8484611468565b6001600160a01b03918216600090815260986020908152604080832093909416825291909152205490565b610dff610fc0565b6001600160a01b0316610e10610c57565b6001600160a01b031614610e59576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b6001600160a01b038116610e9e5760405162461bcd60e51b8152600401808060200182810382526026815260200180611e806026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b610f02610fc0565b6001600160a01b0316610f13610c57565b6001600160a01b031614610f5c576040805162461bcd60e51b81526020600482018190526024820152600080516020611f8b833981519152604482015290519081900360640190fd5b60fb80546001600160a01b0319166001600160a01b038316908117909155610f82610fc0565b6001600160a01b03167f02b23d62d8f733974f8cb13eb804b20135521322b70997c991fc01406632389f60405160405180910390a350565b3b151590565b3390565b6001600160a01b0383166110095760405162461bcd60e51b81526004018080602001828103825260248152602001806120116024913960400191505060405180910390fd5b6001600160a01b03821661104e5760405162461bcd60e51b8152600401808060200182810382526022815260200180611ea66022913960400191505060405180910390fd5b6001600160a01b03808416600081815260986020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611102908490611b6f565b505050565b600061111230610fba565b15905090565b600054610100900460ff16806111315750611131611107565b8061113f575060005460ff16155b61117a5760405162461bcd60e51b815260040180806020018281038252602e815260200180611f35602e913960400191505060405180910390fd5b600054610100900460ff161580156111a5576000805460ff1961ff0019909116610100171660011790555b80156111b7576000805461ff00191690555b50565b600054610100900460ff16806111d357506111d3611107565b806111e1575060005460ff16155b61121c5760405162461bcd60e51b815260040180806020018281038252602e815260200180611f35602e913960400191505060405180910390fd5b600054610100900460ff16158015611247576000805460ff1961ff0019909116610100171660011790555b6000611251610fc0565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156111b7576000805461ff001916905550565b600054610100900460ff16806112cc57506112cc611107565b806112da575060005460ff16155b6113155760405162461bcd60e51b815260040180806020018281038252602e815260200180611f35602e913960400191505060405180910390fd5b600054610100900460ff16158015611340576000805460ff1961ff0019909116610100171660011790555b6065805460ff1916905580156111b7576000805461ff001916905550565b600054610100900460ff16806113775750611377611107565b80611385575060005460ff16155b6113c05760405162461bcd60e51b815260040180806020018281038252602e815260200180611f35602e913960400191505060405180910390fd5b600054610100900460ff161580156113eb576000805460ff1961ff0019909116610100171660011790555b6001600160a01b0382166114305760405162461bcd60e51b8152600401808060200182810382526021815260200180611eee6021913960400191505060405180910390fd5b611438611118565b60c980546001600160a01b0319166001600160a01b0384161790558015610abd576000805461ff00191690555050565b6001600160a01b0383166114ad5760405162461bcd60e51b8152600401808060200182810382526025815260200180611fec6025913960400191505060405180910390fd5b6001600160a01b0382166114f25760405162461bcd60e51b8152600401808060200182810382526023815260200180611e3b6023913960400191505060405180910390fd5b6114fd838383611102565b61153a81604051806060016040528060268152602001611ec8602691396001600160a01b0386166000908152609760205260409020549190611791565b6001600160a01b0380851660008181526097602090815260408083209590955560c9548551632f8e517960e21b81526004810194909452878516602485015260448401879052945194909316939092849263be3945e49260648083019392829003018186803b1580156115ac57600080fd5b505afa1580156115c0573d6000803e3d6000fd5b505050506040513d60208110156115d657600080fd5b5051905060006115e68483611c20565b6001600160a01b03861660009081526097602052604090205490915061160c9082611828565b6001600160a01b0380871660008181526097602090815260409182902094909455805185815290519193928a1692600080516020611fab83398151915292918290030190a38115611789576000836001600160a01b03166366d003ac6040518163ffffffff1660e01b815260040160206040518083038186803b15801561169257600080fd5b505afa1580156116a6573d6000803e3d6000fd5b505050506040513d60208110156116bc57600080fd5b50516001600160a01b0381166000908152609760205260409020549091506116e49084611828565b6001600160a01b0380831660008181526097602090815260409182902094909455805187815290519193928b1692600080516020611fab83398151915292918290030190a3836001600160a01b03166398d078b4846040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561176f57600080fd5b505af1158015611783573d6000803e3d6000fd5b50505050505b505050505050565b600081848411156118205760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117e55781810151838201526020016117cd565b50505050905090810190601f1680156118125780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156107c1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b61188a610ad0565b6118d2576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611905610fc0565b604080516001600160a01b039092168252519081900360200190a1565b6001600160a01b03821661197d576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61198960008383611102565b6099546119969082611828565b6099556001600160a01b0382166000908152609760205260409020546119bc9082611828565b6001600160a01b0383166000818152609760209081526040808320949094558351858152935192939192600080516020611fab8339815191529281900390910190a35050565b611a0a610ad0565b15611a4f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611905610fc0565b6001600160a01b038216611aca5760405162461bcd60e51b8152600401808060200182810382526021815260200180611fcb6021913960400191505060405180910390fd5b611ad682600083611102565b611b1381604051806060016040528060228152602001611e5e602291396001600160a01b0385166000908152609760205260409020549190611791565b6001600160a01b038316600090815260976020526040902055609954611b399082611c20565b6099556040805182815290516000916001600160a01b03851691600080516020611fab8339815191529181900360200190a35050565b6000611bc4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c629092919063ffffffff16565b80519091501561110257808060200190516020811015611be357600080fd5b50516111025760405162461bcd60e51b815260040180806020018281038252602a815260200180612035602a913960400191505060405180910390fd5b60006107c183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611791565b6060611c718484600085611c79565b949350505050565b606082471015611cba5760405162461bcd60e51b8152600401808060200182810382526026815260200180611f0f6026913960400191505060405180910390fd5b611cc385610fba565b611d14576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611d525780518252601f199092019160209182019101611d33565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611db4576040519150601f19603f3d011682016040523d82523d6000602084013e611db9565b606091505b5091509150611dc9828286611dd4565b979650505050505050565b60608315611de35750816107c1565b825115611df35782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156117e55781810151838201526020016117cd56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365455243323054784665653a206665654c6f676963207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122040f8b16cbd585a500135c8b321307be8c4935211bb9528c64a7dacb257f2ad7064736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "feeLogic()": {
        "details": "Returns the feeLogic handler address."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token. Overload it to change."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name. Overload it to change."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 137,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 140,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 484,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 129,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 506,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "_paused",
        "offset": 0,
        "slot": "101",
        "type": "t_bool"
      },
      {
        "astId": 597,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 21019,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "_balances",
        "offset": 0,
        "slot": "151",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 21025,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "_allowances",
        "offset": 0,
        "slot": "152",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 21027,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "153",
        "type": "t_uint256"
      },
      {
        "astId": 21490,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "__gap",
        "offset": 0,
        "slot": "154",
        "type": "t_array(t_uint256)47_storage"
      },
      {
        "astId": 21680,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "_feeLogic",
        "offset": 0,
        "slot": "201",
        "type": "t_address"
      },
      {
        "astId": 21857,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 22101,
        "contract": "contracts/tokens/ETHtx.sol:ETHtx",
        "label": "_minter",
        "offset": 0,
        "slot": "251",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)47_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[47]",
        "numberOfBytes": "1504"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}