{
  "address": "0x5F78eDAc2e0c60e86F04bC93cc9852851Aed752b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ethtx_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gasOracle_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "weth_",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "targetCRatioNum_",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "targetCRatioDen_",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "ETHtxSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "GasOracleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RecoveredUnsupported",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "numerator",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "denominator",
          "type": "uint128"
        }
      ],
      "name": "TargetCRatioSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "author",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WETHSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "buyExact",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountInMax",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "buyExactWithWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "buyWithExactETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "buyWithExactWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "buyWithWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cRatioBelowTarget",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountETHtxOut",
          "type": "uint256"
        }
      ],
      "name": "ethForEthtx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountETHtxIn",
          "type": "uint256"
        }
      ],
      "name": "ethFromEthtxAtRedemption",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethtx",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethtxAvailable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountETHOut",
          "type": "uint256"
        }
      ],
      "name": "ethtxForEthAtRedemption",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountETHIn",
          "type": "uint256"
        }
      ],
      "name": "ethtxFromEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethtxOutstanding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeLogic",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasPerETHtx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasPriceAtRedemption",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "ethtx_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gasOracle_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "weth_",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "targetCRatioNum_",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "targetCRatioDen_",
          "type": "uint128"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxGasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "recoverUnsupportedERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountInMax",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "redeemExact",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "redeemWithExact",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "setEthtx",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "setGasOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "numerator",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "denominator",
          "type": "uint128"
        }
      ],
      "name": "setTargetCRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "setWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetCRatio",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "numerator",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "denominator",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x19d48377304158d0fdba384f5e000c44615a76f94c89056584eab95fe17df8e6",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x5757Dd711EaE80e181E07CdbCe43359Ac1048394",
    "contractAddress": null,
    "transactionIndex": 2,
    "gasUsed": "3041556",
    "logsBloom": "0x00000000000000200000010040000000000000000000000000800000000000000000000000000000000000000000000080000000000000000000000000000000200000000000000000000000000000040001004000000000000000000000000000000010020000000200000000000800000000000000000000000000000000400000000000000040000000000000000020000000001000000000000000000000000000000001000020800000000000000000000000a00000000200400000080000000000001010000000000000000000008000000000002000000018000020000000000000000000004200000000000080000000000000000000000040000000",
    "blockHash": "0xd0628b0498641989987f3b3d1e5536617d32aae21bd1fdb737265094a26b4928",
    "transactionHash": "0x19d48377304158d0fdba384f5e000c44615a76f94c89056584eab95fe17df8e6",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 9985333,
        "transactionHash": "0x19d48377304158d0fdba384f5e000c44615a76f94c89056584eab95fe17df8e6",
        "address": "0x5F78eDAc2e0c60e86F04bC93cc9852851Aed752b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd0628b0498641989987f3b3d1e5536617d32aae21bd1fdb737265094a26b4928"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 9985333,
        "transactionHash": "0x19d48377304158d0fdba384f5e000c44615a76f94c89056584eab95fe17df8e6",
        "address": "0x5F78eDAc2e0c60e86F04bC93cc9852851Aed752b",
        "topics": [
          "0x771296b6c631391f79de88226814060fdb511864a4e620f8085f4534f20b5f84",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c",
          "0x000000000000000000000000dc456ac4e0c1d88f0f32b9b116bebbd678d4b81d"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xd0628b0498641989987f3b3d1e5536617d32aae21bd1fdb737265094a26b4928"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 9985333,
        "transactionHash": "0x19d48377304158d0fdba384f5e000c44615a76f94c89056584eab95fe17df8e6",
        "address": "0x5F78eDAc2e0c60e86F04bC93cc9852851Aed752b",
        "topics": [
          "0x580c76d0bfa674377787c86b7e4910624b8de2f31c4f8284196ac7ce68a3a57b",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c",
          "0x000000000000000000000000bcd972676e53b75d2f04778d0b97206a62206cc9"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xd0628b0498641989987f3b3d1e5536617d32aae21bd1fdb737265094a26b4928"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 9985333,
        "transactionHash": "0x19d48377304158d0fdba384f5e000c44615a76f94c89056584eab95fe17df8e6",
        "address": "0x5F78eDAc2e0c60e86F04bC93cc9852851Aed752b",
        "topics": [
          "0x9af9b815b340cc536d9c60d950fdae6e7d2932ec908595257787b6a7f4dec372",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 3,
        "blockHash": "0xd0628b0498641989987f3b3d1e5536617d32aae21bd1fdb737265094a26b4928"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 9985333,
        "transactionHash": "0x19d48377304158d0fdba384f5e000c44615a76f94c89056584eab95fe17df8e6",
        "address": "0x5F78eDAc2e0c60e86F04bC93cc9852851Aed752b",
        "topics": [
          "0x9cfa0588ff5ff3789d20735024d004bfb8db496d5117712e136adbfe97af41d7",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c",
          "0x000000000000000000000000706f8bf6ff5352f61f3e6d554232bed01d679938"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0xd0628b0498641989987f3b3d1e5536617d32aae21bd1fdb737265094a26b4928"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 9985333,
        "transactionHash": "0x19d48377304158d0fdba384f5e000c44615a76f94c89056584eab95fe17df8e6",
        "address": "0x5F78eDAc2e0c60e86F04bC93cc9852851Aed752b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c",
          "0x0000000000000000000000005757dd711eae80e181e07cdbce43359ac1048394"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0xd0628b0498641989987f3b3d1e5536617d32aae21bd1fdb737265094a26b4928"
      }
    ],
    "blockNumber": 9985333,
    "cumulativeGasUsed": "3095102",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5757Dd711EaE80e181E07CdbCe43359Ac1048394",
    "0xDc456AC4e0C1D88f0f32b9B116BEBBd678D4b81D",
    "0xBCd972676e53b75D2f04778d0b97206A62206Cc9",
    "0x706f8Bf6ff5352F61F3e6D554232BeD01d679938",
    2,
    1
  ],
  "solcInputHash": "d866fd3a9c665c3159ffcb94310e6171",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ethtx_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gasOracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"weth_\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"targetCRatioNum_\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"targetCRatioDen_\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ETHtxSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"GasOracleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RecoveredUnsupported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"numerator\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"denominator\",\"type\":\"uint128\"}],\"name\":\"TargetCRatioSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WETHSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buyExact\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buyExactWithWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buyWithExactETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buyWithExactWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buyWithWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cRatioBelowTarget\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETHtxOut\",\"type\":\"uint256\"}],\"name\":\"ethForEthtx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETHtxIn\",\"type\":\"uint256\"}],\"name\":\"ethFromEthtxAtRedemption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethtx\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethtxAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETHOut\",\"type\":\"uint256\"}],\"name\":\"ethtxForEthAtRedemption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETHIn\",\"type\":\"uint256\"}],\"name\":\"ethtxFromEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethtxOutstanding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPerETHtx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPriceAtRedemption\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ethtx_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gasOracle_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"weth_\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"targetCRatioNum_\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"targetCRatioDen_\",\"type\":\"uint128\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recoverUnsupportedERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"redeemExact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"redeemWithExact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setEthtx\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setGasOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"numerator\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"denominator\",\"type\":\"uint128\"}],\"name\":\"setTargetCRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetCRatio\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"numerator\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"denominator\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/exchanges/ETHtxAMM/ETHtxAMM.sol\":\"ETHtxAMM\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/Initializable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xba7ba5b188c0b27489bad1efee8d8b1dcebb502785192b22e3d69824a802983d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity >=0.4.24 <0.8.0;\\n\\nimport \\\"../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /// @dev Returns true if and only if the function is running in the constructor\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1fd568d8b8ca285c801fbd1d3f40f848434d850a682c0273786cada3e0b84057\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\nimport \\\"../proxy/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal initializer {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x20f2d2dc1bd6616bf85e695f9139c2a949cfc4bd8e2f4de0c5d0f9bb54f8df9e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc77dd6233a82c7c6e3dc49da8f3456baa00ecd3ea4dfa9222002a9aebf155dcd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07779badf9435bce9a95e4527e892d83a2baae798ba87203db0b22679b40ef35\",\"license\":\"MIT\"},\"contracts/exchanges/ETHtxAMM/ETHtxAMM.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\nimport \\\"./ETHtxAMMData.sol\\\";\\nimport \\\"../interfaces/IETHtxAMM.sol\\\";\\nimport \\\"../../tokens/interfaces/IETHtx.sol\\\";\\nimport \\\"../../tokens/interfaces/IERC20TxFee.sol\\\";\\nimport \\\"../../tokens/interfaces/IWETH.sol\\\";\\nimport \\\"../../rewards/interfaces/IFeeLogic.sol\\\";\\nimport \\\"../../oracles/interfaces/IGasPrice.sol\\\";\\n\\ncontract ETHtxAMM is\\n\\tInitializable,\\n\\tContextUpgradeable,\\n\\tOwnableUpgradeable,\\n\\tPausableUpgradeable,\\n\\tETHtxAMMData,\\n\\tIETHtxAMM\\n{\\n\\tusing Address for address payable;\\n\\tusing SafeERC20 for IERC20;\\n\\tusing SafeMath for uint128;\\n\\tusing SafeMath for uint256;\\n\\n\\t/* Constructor */\\n\\n\\tconstructor(\\n\\t\\taddress owner_,\\n\\t\\taddress ethtx_,\\n\\t\\taddress gasOracle_,\\n\\t\\taddress weth_,\\n\\t\\tuint128 targetCRatioNum_,\\n\\t\\tuint128 targetCRatioDen_\\n\\t) {\\n\\t\\tinit(\\n\\t\\t\\towner_,\\n\\t\\t\\tethtx_,\\n\\t\\t\\tgasOracle_,\\n\\t\\t\\tweth_,\\n\\t\\t\\ttargetCRatioNum_,\\n\\t\\t\\ttargetCRatioDen_\\n\\t\\t);\\n\\t}\\n\\n\\t/* Initializer */\\n\\n\\tfunction init(\\n\\t\\taddress owner_,\\n\\t\\taddress ethtx_,\\n\\t\\taddress gasOracle_,\\n\\t\\taddress weth_,\\n\\t\\tuint128 targetCRatioNum_,\\n\\t\\tuint128 targetCRatioDen_\\n\\t) public virtual initializer {\\n\\t\\t__Context_init_unchained();\\n\\t\\t__Ownable_init_unchained();\\n\\t\\t__Pausable_init_unchained();\\n\\n\\t\\tsetEthtx(ethtx_);\\n\\t\\tsetGasOracle(gasOracle_);\\n\\t\\tsetTargetCRatio(targetCRatioNum_, targetCRatioDen_);\\n\\t\\tsetWETH(weth_);\\n\\n\\t\\tif (owner_ != owner()) {\\n\\t\\t\\ttransferOwnership(owner_);\\n\\t\\t}\\n\\t}\\n\\n\\t/* Fallbacks */\\n\\n\\treceive() external payable {\\n\\t\\t// Only accept random ETH if we can convert to WETH\\n\\t\\tIWETH(weth()).deposit{ value: msg.value }();\\n\\t}\\n\\n\\t/* Modifiers */\\n\\n\\tmodifier ensure(uint256 deadline) {\\n\\t\\t// solhint-disable-next-line not-rely-on-time\\n\\t\\trequire(deadline >= block.timestamp, \\\"ETHtxAMM: expired\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier priceIsFresh() {\\n\\t\\trequire(\\n\\t\\t\\t!IGasPrice(gasOracle()).hasPriceExpired(),\\n\\t\\t\\t\\\"ETHtxAMM: gas price is outdated\\\"\\n\\t\\t);\\n\\t\\t_;\\n\\t}\\n\\n\\t/* External Mutators */\\n\\n\\tfunction buy(uint256 deadline)\\n\\t\\texternal\\n\\t\\tpayable\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\tensure(deadline)\\n\\t\\tpriceIsFresh\\n\\t{\\n\\t\\tuint256 amountIn = msg.value;\\n\\t\\tuint256 amountOut = ethtxFromEth(amountIn);\\n\\t\\t_buy(_msgSender(), amountIn, amountOut, false);\\n\\t}\\n\\n\\tfunction buyWithWETH(uint256 amountIn, uint256 deadline)\\n\\t\\texternal\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\tensure(deadline)\\n\\t\\tpriceIsFresh\\n\\t{\\n\\t\\tuint256 amountOut = ethtxFromEth(amountIn);\\n\\t\\t_buy(_msgSender(), amountIn, amountOut, true);\\n\\t}\\n\\n\\tfunction buyExact(uint256 amountOut, uint256 deadline)\\n\\t\\texternal\\n\\t\\tpayable\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\tensure(deadline)\\n\\t\\tpriceIsFresh\\n\\t{\\n\\t\\taddress account = _msgSender();\\n\\t\\tuint256 amountIn = ethForEthtx(amountOut);\\n\\t\\trequire(amountIn <= msg.value, \\\"ETHtxAMM: amountIn exceeds max\\\");\\n\\t\\t_buy(account, amountIn, amountOut, false);\\n\\t\\t// refund leftover ETH\\n\\t\\tif (msg.value > amountIn) {\\n\\t\\t\\tpayable(account).sendValue(msg.value - amountIn);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction buyExactWithWETH(\\n\\t\\tuint256 amountInMax,\\n\\t\\tuint256 amountOut,\\n\\t\\tuint256 deadline\\n\\t) external virtual override ensure(deadline) priceIsFresh {\\n\\t\\tuint256 amountIn = ethForEthtx(amountOut);\\n\\t\\trequire(amountIn <= amountInMax, \\\"ETHtxAMM: amountIn exceeds max\\\");\\n\\t\\t_buy(_msgSender(), amountIn, amountOut, true);\\n\\t}\\n\\n\\tfunction buyWithExactETH(uint256 amountOutMin, uint256 deadline)\\n\\t\\texternal\\n\\t\\tpayable\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\tensure(deadline)\\n\\t\\tpriceIsFresh\\n\\t{\\n\\t\\tuint256 amountIn = msg.value;\\n\\t\\tuint256 amountOut = ethtxFromEth(amountIn);\\n\\t\\trequire(amountOut >= amountOutMin, \\\"ETHtxAMM: amountOut below min\\\");\\n\\t\\t_buy(_msgSender(), amountIn, amountOut, false);\\n\\t}\\n\\n\\tfunction buyWithExactWETH(\\n\\t\\tuint256 amountIn,\\n\\t\\tuint256 amountOutMin,\\n\\t\\tuint256 deadline\\n\\t) external virtual override ensure(deadline) priceIsFresh {\\n\\t\\tuint256 amountOut = ethtxFromEth(amountIn);\\n\\t\\trequire(amountOut >= amountOutMin, \\\"ETHtxAMM: amountOut below min\\\");\\n\\t\\t_buy(_msgSender(), amountIn, amountOut, true);\\n\\t}\\n\\n\\tfunction pause() external virtual override onlyOwner whenNotPaused {\\n\\t\\t_pause();\\n\\t}\\n\\n\\tfunction recoverUnsupportedERC20(\\n\\t\\taddress token,\\n\\t\\taddress to,\\n\\t\\tuint256 amount\\n\\t) external virtual override onlyOwner {\\n\\t\\trequire(token != weth(), \\\"ETHtxAMM: cannot recover WETH\\\");\\n\\t\\trequire(token != ethtx(), \\\"ETHtxAMM: cannot recover ETHtx\\\");\\n\\n\\t\\tIERC20(token).safeTransfer(to, amount);\\n\\t\\temit RecoveredUnsupported(_msgSender(), token, to, amount);\\n\\t}\\n\\n\\tfunction redeem(uint256 amountIn, uint256 deadline)\\n\\t\\texternal\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\tensure(deadline)\\n\\t\\tpriceIsFresh\\n\\t{\\n\\t\\tuint256 amountOut = ethFromEthtxAtRedemption(amountIn);\\n\\t\\t_redeem(_msgSender(), amountIn, amountOut);\\n\\t}\\n\\n\\tfunction redeemExact(\\n\\t\\tuint256 amountInMax,\\n\\t\\tuint256 amountOut,\\n\\t\\tuint256 deadline\\n\\t) external virtual override ensure(deadline) priceIsFresh {\\n\\t\\tuint256 amountIn = ethtxForEthAtRedemption(amountOut);\\n\\t\\trequire(amountIn <= amountInMax, \\\"ETHtxAMM: amountIn exceeds max\\\");\\n\\t\\t_redeem(_msgSender(), amountIn, amountOut);\\n\\t}\\n\\n\\tfunction redeemWithExact(\\n\\t\\tuint256 amountIn,\\n\\t\\tuint256 amountOutMin,\\n\\t\\tuint256 deadline\\n\\t) external virtual override ensure(deadline) priceIsFresh {\\n\\t\\tuint256 amountOut = ethFromEthtxAtRedemption(amountIn);\\n\\t\\trequire(amountOut >= amountOutMin, \\\"ETHtxAMM: amountOut below min\\\");\\n\\t\\t_redeem(_msgSender(), amountIn, amountOut);\\n\\t}\\n\\n\\tfunction setEthtx(address account) public virtual override onlyOwner {\\n\\t\\trequire(account != address(0), \\\"ETHtxAMM: ETHtx zero address\\\");\\n\\t\\t_ethtx = account;\\n\\t\\temit ETHtxSet(_msgSender(), account);\\n\\t}\\n\\n\\tfunction setGasOracle(address account) public virtual override onlyOwner {\\n\\t\\trequire(account != address(0), \\\"ETHtxAMM: gasOracle zero address\\\");\\n\\t\\t_gasOracle = account;\\n\\t\\temit GasOracleSet(_msgSender(), account);\\n\\t}\\n\\n\\tfunction setTargetCRatio(uint128 numerator, uint128 denominator)\\n\\t\\tpublic\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\tonlyOwner\\n\\t{\\n\\t\\trequire(numerator != 0, \\\"ETHtxAMM: targetCRatio numerator is zero\\\");\\n\\t\\trequire(denominator != 0, \\\"ETHtxAMM: targetCRatio denominator is zero\\\");\\n\\t\\t_targetCRatioNum = numerator;\\n\\t\\t_targetCRatioDen = denominator;\\n\\t\\temit TargetCRatioSet(_msgSender(), numerator, denominator);\\n\\t}\\n\\n\\tfunction setWETH(address account) public virtual override onlyOwner {\\n\\t\\trequire(account != address(0), \\\"ETHtxAMM: WETH zero address\\\");\\n\\t\\t_weth = account;\\n\\t\\temit WETHSet(_msgSender(), account);\\n\\t}\\n\\n\\tfunction unpause() external virtual override onlyOwner whenPaused {\\n\\t\\t_unpause();\\n\\t}\\n\\n\\t/* Public Pure */\\n\\n\\tfunction gasPerETHtx() public pure virtual override returns (uint256) {\\n\\t\\treturn 21000; // Per 1e18\\n\\t}\\n\\n\\t/* Public Views */\\n\\n\\tfunction cRatio()\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\treturns (uint256 numerator, uint256 denominator)\\n\\t{\\n\\t\\tnumerator = ethSupply();\\n\\t\\tdenominator = ethForEthtx(ethtxOutstanding());\\n\\t}\\n\\n\\tfunction cRatioBelowTarget() public view virtual override returns (bool) {\\n\\t\\t(uint256 cRatioNum, uint256 cRatioDen) = cRatio();\\n\\t\\tif (cRatioDen == 0) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tuint256 current = cRatioNum.mul(1e18) / cRatioDen;\\n\\n\\t\\t(uint256 targetNum, uint256 targetDen) = targetCRatio();\\n\\t\\tuint256 target = targetNum.mul(1e18).div(targetDen);\\n\\n\\t\\treturn current < target;\\n\\t}\\n\\n\\tfunction ethForEthtx(uint256 amountETHtxOut)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\t// Add 1 to account for rounding (can't buy ETHtx for 0 wei)\\n\\t\\treturn _ethtxToEth(gasPrice(), amountETHtxOut).add(1);\\n\\t}\\n\\n\\tfunction ethFromEthtxAtRedemption(uint256 amountETHtxIn)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\t// Account for fee\\n\\t\\tuint256 fee =\\n\\t\\t\\tIFeeLogic(feeLogic()).getFee(_msgSender(), address(this), amountETHtxIn);\\n\\n\\t\\treturn _ethtxToEth(gasPriceAtRedemption(), amountETHtxIn.sub(fee));\\n\\t}\\n\\n\\tfunction ethtx() public view virtual override returns (address) {\\n\\t\\treturn _ethtx;\\n\\t}\\n\\n\\tfunction ethtxFromEth(uint256 amountETHIn)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\treturn _ethToEthtx(gasPrice(), amountETHIn);\\n\\t}\\n\\n\\tfunction ethtxForEthAtRedemption(uint256 amountETHOut)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\tuint256 amountETHtx = _ethToEthtx(gasPriceAtRedemption(), amountETHOut);\\n\\n\\t\\t// Account for fee\\n\\t\\tuint256 amountBeforeFee =\\n\\t\\t\\tIFeeLogic(feeLogic()).undoFee(_msgSender(), address(this), amountETHtx);\\n\\n\\t\\treturn amountBeforeFee;\\n\\t}\\n\\n\\tfunction ethSupply() public view virtual override returns (uint256) {\\n\\t\\treturn IERC20(weth()).balanceOf(address(this));\\n\\t}\\n\\n\\tfunction ethtxAvailable() public view virtual override returns (uint256) {\\n\\t\\treturn IERC20(ethtx()).balanceOf(address(this));\\n\\t}\\n\\n\\tfunction ethtxOutstanding() public view virtual override returns (uint256) {\\n\\t\\treturn IERC20(ethtx()).totalSupply().sub(ethtxAvailable());\\n\\t}\\n\\n\\tfunction feeLogic() public view virtual override returns (address) {\\n\\t\\treturn IERC20TxFee(ethtx()).feeLogic();\\n\\t}\\n\\n\\tfunction gasOracle() public view virtual override returns (address) {\\n\\t\\treturn _gasOracle;\\n\\t}\\n\\n\\tfunction gasPrice() public view virtual override returns (uint256) {\\n\\t\\treturn IGasPrice(gasOracle()).gasPrice();\\n\\t}\\n\\n\\tfunction gasPriceAtRedemption()\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\t// Apply cap when collateral below target\\n\\t\\tuint256 gasPrice_ = gasPrice();\\n\\t\\tuint256 maxGasPrice_ = maxGasPrice();\\n\\t\\tif (gasPrice_ > maxGasPrice_) {\\n\\t\\t\\tgasPrice_ = maxGasPrice_;\\n\\t\\t}\\n\\t\\treturn gasPrice_;\\n\\t}\\n\\n\\tfunction maxGasPrice() public view virtual override returns (uint256) {\\n\\t\\tuint256 liability = ethtxOutstanding();\\n\\t\\tif (liability == 0) {\\n\\t\\t\\treturn gasPrice();\\n\\t\\t}\\n\\n\\t\\t(uint128 targetNum, uint128 targetDen) = targetCRatio();\\n\\n\\t\\tuint256 numerator = ethSupply().mul(1e18).mul(targetDen);\\n\\t\\tuint256 denominator = liability.mul(gasPerETHtx()).mul(targetNum);\\n\\t\\treturn numerator.div(denominator);\\n\\t}\\n\\n\\tfunction targetCRatio()\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\toverride\\n\\t\\treturns (uint128 numerator, uint128 denominator)\\n\\t{\\n\\t\\tnumerator = _targetCRatioNum;\\n\\t\\tdenominator = _targetCRatioDen;\\n\\t}\\n\\n\\tfunction weth() public view virtual override returns (address) {\\n\\t\\treturn _weth;\\n\\t}\\n\\n\\t/* Internal Pure */\\n\\n\\tfunction _ethtxToEth(uint256 gasPrice_, uint256 amountETHtx)\\n\\t\\tinternal\\n\\t\\tpure\\n\\t\\tvirtual\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\treturn gasPrice_.mul(amountETHtx).mul(gasPerETHtx()).div(1e18);\\n\\t}\\n\\n\\tfunction _ethToEthtx(uint256 gasPrice_, uint256 amountETH)\\n\\t\\tinternal\\n\\t\\tpure\\n\\t\\tvirtual\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\trequire(gasPrice_ != 0, \\\"ETHtxAMM: gasPrice is zero\\\");\\n\\t\\tuint256 numerator = amountETH.mul(1e18);\\n\\t\\tuint256 denominator = gasPrice_.mul(gasPerETHtx());\\n\\t\\treturn numerator.div(denominator);\\n\\t}\\n\\n\\t/* Internal Mutators */\\n\\n\\tfunction _buy(\\n\\t\\taddress account,\\n\\t\\tuint256 amountIn,\\n\\t\\tuint256 amountOut,\\n\\t\\tbool useWETH\\n\\t) internal virtual {\\n\\t\\tuint256 availableSupply = IERC20(ethtx()).balanceOf(address(this));\\n\\t\\trequire(availableSupply >= amountOut, \\\"ETHtxAMM: not enough ETHtx to buy\\\");\\n\\n\\t\\tif (useWETH) {\\n\\t\\t\\tIERC20(weth()).safeTransferFrom(account, address(this), amountIn);\\n\\t\\t} else {\\n\\t\\t\\tIWETH(weth()).deposit{ value: amountIn }();\\n\\t\\t}\\n\\n\\t\\t// Bypass fee when buying by setting exemption for AMM contract\\n\\t\\tIERC20(ethtx()).safeTransfer(account, amountOut);\\n\\t}\\n\\n\\tfunction _redeem(\\n\\t\\taddress account,\\n\\t\\tuint256 amountIn,\\n\\t\\tuint256 amountOut\\n\\t) internal virtual {\\n\\t\\t// Apply fee\\n\\t\\tIERC20(ethtx()).safeTransferFrom(account, address(this), amountIn);\\n\\n\\t\\tIERC20(weth()).safeTransfer(account, amountOut);\\n\\t}\\n}\\n\",\"keccak256\":\"0x489107d8b88d2e7587c938168f25c370753a0b71551f819169bf131c276f7fdb\",\"license\":\"MIT\"},\"contracts/exchanges/ETHtxAMM/ETHtxAMMData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ncontract ETHtxAMMData {\\n\\taddress internal _gasOracle;\\n\\tuint128 internal _targetCRatioNum;\\n\\tuint128 internal _targetCRatioDen;\\n\\taddress internal _ethtx;\\n\\taddress internal _weth;\\n}\\n\",\"keccak256\":\"0xb35009d89209b13dba50a516439fb41108886d115483fb7dabbd92aa612315e4\",\"license\":\"MIT\"},\"contracts/exchanges/interfaces/IETHtxAMM.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ninterface IETHtxAMM {\\n\\t/* Views */\\n\\n\\tfunction cRatio()\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint256 numerator, uint256 denominator);\\n\\n\\tfunction cRatioBelowTarget() external view returns (bool);\\n\\n\\tfunction ethForEthtx(uint256 amountETHtxOut) external view returns (uint256);\\n\\n\\tfunction ethFromEthtxAtRedemption(uint256 amountETHtxIn)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint256);\\n\\n\\tfunction ethtx() external view returns (address);\\n\\n\\tfunction ethtxFromEth(uint256 amountETHIn) external view returns (uint256);\\n\\n\\tfunction ethtxForEthAtRedemption(uint256 amountETHOut)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint256);\\n\\n\\tfunction ethSupply() external view returns (uint256);\\n\\n\\tfunction ethtxAvailable() external view returns (uint256);\\n\\n\\tfunction ethtxOutstanding() external view returns (uint256);\\n\\n\\tfunction feeLogic() external view returns (address);\\n\\n\\tfunction gasOracle() external view returns (address);\\n\\n\\tfunction gasPerETHtx() external pure returns (uint256);\\n\\n\\tfunction gasPrice() external view returns (uint256);\\n\\n\\tfunction gasPriceAtRedemption() external view returns (uint256);\\n\\n\\tfunction maxGasPrice() external view returns (uint256);\\n\\n\\tfunction targetCRatio()\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint128 numerator, uint128 denominator);\\n\\n\\tfunction weth() external view returns (address);\\n\\n\\t/* Mutators */\\n\\n\\tfunction buy(uint256 deadline) external payable;\\n\\n\\tfunction buyWithWETH(uint256 amountIn, uint256 deadline) external;\\n\\n\\tfunction buyExact(uint256 amountOut, uint256 deadline) external payable;\\n\\n\\tfunction buyExactWithWETH(\\n\\t\\tuint256 amountInMax,\\n\\t\\tuint256 amountOut,\\n\\t\\tuint256 deadline\\n\\t) external;\\n\\n\\tfunction buyWithExactETH(uint256 amountOutMin, uint256 deadline)\\n\\t\\texternal\\n\\t\\tpayable;\\n\\n\\tfunction buyWithExactWETH(\\n\\t\\tuint256 amountIn,\\n\\t\\tuint256 amountOutMin,\\n\\t\\tuint256 deadline\\n\\t) external;\\n\\n\\tfunction pause() external;\\n\\n\\tfunction recoverUnsupportedERC20(\\n\\t\\taddress token,\\n\\t\\taddress to,\\n\\t\\tuint256 amount\\n\\t) external;\\n\\n\\tfunction redeem(uint256 amountIn, uint256 deadline) external;\\n\\n\\tfunction redeemExact(\\n\\t\\tuint256 amountInMax,\\n\\t\\tuint256 amountOut,\\n\\t\\tuint256 deadline\\n\\t) external;\\n\\n\\tfunction redeemWithExact(\\n\\t\\tuint256 amountIn,\\n\\t\\tuint256 amountOutMin,\\n\\t\\tuint256 deadline\\n\\t) external;\\n\\n\\tfunction setEthtx(address account) external;\\n\\n\\tfunction setGasOracle(address account) external;\\n\\n\\tfunction setTargetCRatio(uint128 numerator, uint128 denominator) external;\\n\\n\\tfunction setWETH(address account) external;\\n\\n\\tfunction unpause() external;\\n\\n\\t/* Events */\\n\\n\\tevent ETHtxSet(address indexed author, address indexed account);\\n\\tevent GasOracleSet(address indexed author, address indexed account);\\n\\tevent RecoveredUnsupported(\\n\\t\\taddress indexed author,\\n\\t\\taddress indexed token,\\n\\t\\taddress indexed to,\\n\\t\\tuint256 amount\\n\\t);\\n\\tevent TargetCRatioSet(\\n\\t\\taddress indexed author,\\n\\t\\tuint128 numerator,\\n\\t\\tuint128 denominator\\n\\t);\\n\\tevent WETHSet(address indexed author, address indexed account);\\n}\\n\",\"keccak256\":\"0xe3319fc2b8380a33fa62691b20e54ff95106daaaedad5c4d34dc56b70c5e064b\",\"license\":\"MIT\"},\"contracts/oracles/interfaces/IGasPrice.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ninterface IGasPrice {\\n\\t/* Views */\\n\\n\\tfunction gasPrice() external view returns (uint256);\\n\\n\\tfunction hasPriceExpired() external view returns (bool);\\n\\n\\tfunction updateThreshold() external view returns (uint256);\\n\\n\\tfunction updatedAt() external view returns (uint256);\\n\\n\\t/* Mutators */\\n\\n\\tfunction setGasPrice(uint256 _gasPrice) external;\\n\\n\\tfunction setUpdateThreshold(uint256 _updateThreshold) external;\\n\\n\\t/* Events */\\n\\n\\tevent GasPriceUpdate(address indexed author, uint256 newValue);\\n\\tevent UpdateThresholdSet(address indexed author, uint256 value);\\n}\\n\",\"keccak256\":\"0x6d96001d4ae1e7422a49c9f9756206f71add1fa0773aaeaa422ad5cbb9bacab6\",\"license\":\"MIT\"},\"contracts/rewards/interfaces/IFeeLogic.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ninterface IFeeLogic {\\n\\t/* Views */\\n\\n\\tfunction exemptsAt(uint256 index) external view returns (address);\\n\\n\\tfunction exemptsLength() external view returns (uint256);\\n\\n\\tfunction feeRate()\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (uint128 numerator, uint128 denominator);\\n\\n\\tfunction getFee(\\n\\t\\taddress sender,\\n\\t\\taddress recipient_,\\n\\t\\tuint256 amount\\n\\t) external view returns (uint256);\\n\\n\\tfunction isExempt(address account) external view returns (bool);\\n\\n\\tfunction recipient() external view returns (address);\\n\\n\\tfunction undoFee(\\n\\t\\taddress sender,\\n\\t\\taddress recipient_,\\n\\t\\tuint256 amount\\n\\t) external view returns (uint256);\\n\\n\\t/* Mutators */\\n\\n\\tfunction notify(uint256 amount) external;\\n\\n\\tfunction setExempt(address account, bool isExempt_) external;\\n\\n\\tfunction setFeeRate(uint128 numerator, uint128 denominator) external;\\n\\n\\tfunction setRecipient(address account) external;\\n\\n\\t/* Events */\\n\\n\\tevent ExemptAdded(address indexed author, address indexed account);\\n\\tevent ExemptRemoved(address indexed author, address indexed account);\\n\\tevent FeeRateSet(\\n\\t\\taddress indexed author,\\n\\t\\tuint128 numerator,\\n\\t\\tuint128 denominator\\n\\t);\\n\\tevent RecipientSet(address indexed author, address indexed account);\\n}\\n\",\"keccak256\":\"0xe12bc2fd0100272765b8b27f408fe93e735477a47af2f6cd417936b0dc4f8273\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IERC20TxFee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ninterface IERC20TxFee {\\n\\t/* Views */\\n\\n\\tfunction feeLogic() external view returns (address);\\n}\\n\",\"keccak256\":\"0x22e7908ab45d33c317ecba5cd59db1192dd6acd34bc608f6b65ff22c05fe7dd1\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IETHtx.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ninterface IETHtx {\\n\\t/* Views */\\n\\n\\tfunction minter() external view returns (address);\\n\\n\\t/* Mutators */\\n\\n\\tfunction burn(address account, uint256 amount) external;\\n\\n\\tfunction mint(address account, uint256 amount) external;\\n\\n\\tfunction pause() external;\\n\\n\\tfunction recoverERC20(\\n\\t\\taddress token,\\n\\t\\taddress to,\\n\\t\\tuint256 amount\\n\\t) external;\\n\\n\\tfunction setFeeLogic(address account) external;\\n\\n\\tfunction setMinter(address account) external;\\n\\n\\tfunction unpause() external;\\n\\n\\t/* Events */\\n\\n\\tevent FeeLogicSet(address indexed author, address indexed account);\\n\\tevent MinterSet(address indexed author, address indexed account);\\n\\tevent Recovered(\\n\\t\\taddress indexed author,\\n\\t\\taddress indexed token,\\n\\t\\taddress indexed to,\\n\\t\\tuint256 amount\\n\\t);\\n}\\n\",\"keccak256\":\"0x7e117a1038148533589396b5d689c1b74b1823c304a2435de33273449b3367c7\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ninterface IWETH {\\n\\tfunction deposit() external payable;\\n\\n\\tfunction withdraw(uint256) external;\\n}\\n\",\"keccak256\":\"0xa67afe56374106100a0f6b7c269319f9a44a7050fd489610859280e8a63c6ec3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003d7c38038062003d7c833981810160405260c08110156200003757600080fd5b508051602082015160408301516060840151608085015160a09095015193949293919290916200006c86868686868662000078565b50505050505062000a17565b600054610100900460ff168062000094575062000094620001a1565b80620000a3575060005460ff16155b620000e05760405162461bcd60e51b815260040180806020018281038252602e81526020018062003ce4602e913960400191505060405180910390fd5b600054610100900460ff161580156200010c576000805460ff1961ff0019909116610100171660011790555b62000116620001bf565b6200012062000269565b6200012a6200035b565b62000135866200040e565b620001408562000532565b6200014c838362000656565b6200015784620007e0565b6200016162000904565b6001600160a01b0316876001600160a01b0316146200018557620001858762000913565b801562000198576000805461ff00191690555b50505050505050565b6000620001b93062000a0d60201b6200247a1760201c565b15905090565b600054610100900460ff1680620001db5750620001db620001a1565b80620001ea575060005460ff16155b620002275760405162461bcd60e51b815260040180806020018281038252602e81526020018062003ce4602e913960400191505060405180910390fd5b600054610100900460ff1615801562000253576000805460ff1961ff0019909116610100171660011790555b801562000266576000805461ff00191690555b50565b600054610100900460ff168062000285575062000285620001a1565b8062000294575060005460ff16155b620002d15760405162461bcd60e51b815260040180806020018281038252602e81526020018062003ce4602e913960400191505060405180910390fd5b600054610100900460ff16158015620002fd576000805460ff1961ff0019909116610100171660011790555b60006200030962000a13565b603380546001600160a01b0319166001600160a01b0383169081179091556040519192509060009060008051602062003d32833981519152908290a350801562000266576000805461ff001916905550565b600054610100900460ff168062000377575062000377620001a1565b8062000386575060005460ff16155b620003c35760405162461bcd60e51b815260040180806020018281038252602e81526020018062003ce4602e913960400191505060405180910390fd5b600054610100900460ff16158015620003ef576000805460ff1961ff0019909116610100171660011790555b6065805460ff19169055801562000266576000805461ff001916905550565b6200041862000a13565b6001600160a01b03166200042b62000904565b6001600160a01b03161462000476576040805162461bcd60e51b8152602060048201819052602482015260008051602062003d12833981519152604482015290519081900360640190fd5b6001600160a01b038116620004d2576040805162461bcd60e51b815260206004820152601c60248201527f4554487478414d4d3a204554487478207a65726f206164647265737300000000604482015290519081900360640190fd5b609980546001600160a01b0319166001600160a01b038316908117909155620004fa62000a13565b6001600160a01b03167f771296b6c631391f79de88226814060fdb511864a4e620f8085f4534f20b5f8460405160405180910390a350565b6200053c62000a13565b6001600160a01b03166200054f62000904565b6001600160a01b0316146200059a576040805162461bcd60e51b8152602060048201819052602482015260008051602062003d12833981519152604482015290519081900360640190fd5b6001600160a01b038116620005f6576040805162461bcd60e51b815260206004820181905260248201527f4554487478414d4d3a206761734f7261636c65207a65726f2061646472657373604482015290519081900360640190fd5b609780546001600160a01b0319166001600160a01b0383169081179091556200061e62000a13565b6001600160a01b03167f580c76d0bfa674377787c86b7e4910624b8de2f31c4f8284196ac7ce68a3a57b60405160405180910390a350565b6200066062000a13565b6001600160a01b03166200067362000904565b6001600160a01b031614620006be576040805162461bcd60e51b8152602060048201819052602482015260008051602062003d12833981519152604482015290519081900360640190fd5b6001600160801b038216620007055760405162461bcd60e51b815260040180806020018281038252602881526020018062003cbc6028913960400191505060405180910390fd5b6001600160801b0381166200074c5760405162461bcd60e51b815260040180806020018281038252602a81526020018062003d52602a913960400191505060405180910390fd5b609880546001600160801b03838116600160801b028186166001600160801b031990931692909217161790556200078262000a13565b6001600160a01b03167f9af9b815b340cc536d9c60d950fdae6e7d2932ec908595257787b6a7f4dec372838360405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390a25050565b620007ea62000a13565b6001600160a01b0316620007fd62000904565b6001600160a01b03161462000848576040805162461bcd60e51b8152602060048201819052602482015260008051602062003d12833981519152604482015290519081900360640190fd5b6001600160a01b038116620008a4576040805162461bcd60e51b815260206004820152601b60248201527f4554487478414d4d3a2057455448207a65726f20616464726573730000000000604482015290519081900360640190fd5b609a80546001600160a01b0319166001600160a01b038316908117909155620008cc62000a13565b6001600160a01b03167f9cfa0588ff5ff3789d20735024d004bfb8db496d5117712e136adbfe97af41d760405160405180910390a350565b6033546001600160a01b031690565b6200091d62000a13565b6001600160a01b03166200093062000904565b6001600160a01b0316146200097b576040805162461bcd60e51b8152602060048201819052602482015260008051602062003d12833981519152604482015290519081900360640190fd5b6001600160a01b038116620009c25760405162461bcd60e51b815260040180806020018281038252602681526020018062003c966026913960400191505060405180910390fd5b6033546040516001600160a01b0380841692169060008051602062003d3283398151915290600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b3390565b61326f8062000a276000396000f3fe6080604052600436106102345760003560e01c80636bdb33661161012e578063a05d674f116100ab578063d96a094a1161006f578063d96a094a146107e5578063ea03798e14610802578063f2fde38b1461082c578063fa8c076f1461085f578063fe173b971461089257610296565b8063a05d674f1461070e578063a87b815214610723578063b41ac64b14610756578063c28f18211461078c578063d4995e3f146107af57610296565b80638456cb59116100f25780638456cb591461067757806386a86d411461068c5780638da5cb5b146106cf5780638f365b69146106e4578063902dd186146106f957610296565b80636bdb33661461058e57806370251eb4146105c4578063715018a6146105ee5780637cbc237314610603578063805f751a1461063357610296565b80634d6a3cfb116101bc5780635c975abb116101805780635c975abb1461049c5780635d62a8dd146104b157806365ac74db146104c657806368efb513146104f45780636b2075d71461052a57610296565b80634d6a3cfb146104015780635028db1a14610416578063546146e31461042b578063575a9d16146104405780635b769f3c1461046957610296565b80633de39c11116102035780633de39c111461034c5780633f4ba83a146103615780633fc8cef31461037657806345ef1a93146103a75780634a193c8a146103d157610296565b8063146252cb1461029b57806322f7af25146102c2578063313a7972146102ff5780633d9475501461032957610296565b36610296576102416108a7565b6001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561027b57600080fd5b505af115801561028f573d6000803e3d6000fd5b5050505050005b600080fd5b3480156102a757600080fd5b506102b06108b7565b60408051918252519081900360200190f35b3480156102ce57600080fd5b506102fd600480360360408110156102e557600080fd5b506001600160801b038135811691602001351661093e565b005b34801561030b57600080fd5b506102b06004803603602081101561032257600080fd5b5035610ac5565b6102fd6004803603604081101561033f57600080fd5b5080359060200135610ae9565b34801561035857600080fd5b506102b0610c5d565b34801561036d57600080fd5b506102fd610cf0565b34801561038257600080fd5b5061038b6108a7565b604080516001600160a01b039092168252519081900360200190f35b3480156103b357600080fd5b506102b0600480360360208110156103ca57600080fd5b5035610dac565b3480156103dd57600080fd5b506102fd600480360360408110156103f457600080fd5b5080359060200135610e6c565b34801561040d57600080fd5b506102b0610f89565b34801561042257600080fd5b5061038b610f93565b34801561043757600080fd5b506102b0610fd5565b34801561044c57600080fd5b50610455610fdb565b604080519115158252519081900360200190f35b34801561047557600080fd5b506102fd6004803603602081101561048c57600080fd5b50356001600160a01b0316611065565b3480156104a857600080fd5b50610455611180565b3480156104bd57600080fd5b5061038b611189565b3480156104d257600080fd5b506104db611198565b6040805192835260208301919091528051918290030190f35b34801561050057600080fd5b506102fd6004803603606081101561051757600080fd5b50803590602081013590604001356111bb565b34801561053657600080fd5b506102fd600480360360c081101561054d57600080fd5b506001600160a01b038135811691602081013582169160408201358116916060810135909116906001600160801b03608082013581169160a0013516611327565b34801561059a57600080fd5b506102fd600480360360608110156105b157600080fd5b5080359060208101359060400135611435565b3480156105d057600080fd5b506102b0600480360360208110156105e757600080fd5b503561159f565b3480156105fa57600080fd5b506102fd611665565b34801561060f57600080fd5b506102fd6004803603604081101561062657600080fd5b5080359060200135611711565b34801561063f57600080fd5b50610648611826565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b34801561068357600080fd5b506102fd611841565b34801561069857600080fd5b506102fd600480360360608110156106af57600080fd5b506001600160a01b038135811691602081013590911690604001356118f8565b3480156106db57600080fd5b5061038b611aab565b3480156106f057600080fd5b506102b0611aba565b34801561070557600080fd5b5061038b611b3e565b34801561071a57600080fd5b506102b0611b4d565b34801561072f57600080fd5b506102fd6004803603602081101561074657600080fd5b50356001600160a01b0316611b78565b34801561076257600080fd5b506102fd6004803603606081101561077957600080fd5b5080359060208101359060400135611c93565b6102fd600480360360408110156107a257600080fd5b5080359060200135611dfd565b3480156107bb57600080fd5b506102fd600480360360608110156107d257600080fd5b5080359060208101359060400135611f8c565b6102fd600480360360208110156107fb57600080fd5b50356120f8565b34801561080e57600080fd5b506102b06004803603602081101561082557600080fd5b5035612207565b34801561083857600080fd5b506102fd6004803603602081101561084f57600080fd5b50356001600160a01b031661221a565b34801561086b57600080fd5b506102fd6004803603602081101561088257600080fd5b50356001600160a01b031661231d565b34801561089e57600080fd5b506102b0612438565b609a546001600160a01b03165b90565b60006108c1611b3e565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561090d57600080fd5b505afa158015610921573d6000803e3d6000fd5b505050506040513d602081101561093757600080fd5b5051905090565b610946612480565b6001600160a01b0316610957611aab565b6001600160a01b0316146109a0576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6001600160801b0382166109e55760405162461bcd60e51b81526004018080602001828103825260288152602001806130ae6028913960400191505060405180910390fd5b6001600160801b038116610a2a5760405162461bcd60e51b815260040180806020018281038252602a8152602001806131c5602a913960400191505060405180910390fd5b609880546001600160801b03838116600160801b028186166fffffffffffffffffffffffffffffffff199093169290921716179055610a67612480565b6001600160a01b03167f9af9b815b340cc536d9c60d950fdae6e7d2932ec908595257787b6a7f4dec372838360405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390a25050565b6000610ae36001610add610ad7612438565b85612484565b906124a7565b92915050565b8042811015610b33576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b610b3b611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d6020811015610b9d57600080fd5b505115610bdf576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b346000610beb82612207565b905084811015610c42576040805162461bcd60e51b815260206004820152601d60248201527f4554487478414d4d3a20616d6f756e744f75742062656c6f77206d696e000000604482015290519081900360640190fd5b610c56610c4d612480565b83836000612501565b5050505050565b600080610c68611aba565b905080610c7f57610c77612438565b9150506108b4565b600080610c8a611826565b915091506000610cb7826001600160801b0316610cb1670de0b6b3a7640000610cb1610f89565b90612667565b90506000610cda846001600160801b0316610cb1610cd3610fd5565b8890612667565b9050610ce682826126c0565b9550505050505090565b610cf8612480565b6001600160a01b0316610d09611aab565b6001600160a01b031614610d52576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b610d5a611180565b610da2576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b610daa612702565b565b600080610dc0610dba611b4d565b846127a2565b90506000610dcc610f93565b6001600160a01b031663063f384f610de2612480565b30856040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b03168152602001828152602001935050505060206040518083038186803b158015610e3857600080fd5b505afa158015610e4c573d6000803e3d6000fd5b505050506040513d6020811015610e6257600080fd5b5051949350505050565b8042811015610eb6576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b610ebe611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b158015610ef657600080fd5b505afa158015610f0a573d6000803e3d6000fd5b505050506040513d6020811015610f2057600080fd5b505115610f62576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b6000610f6d84612207565b9050610f83610f7a612480565b85836001612501565b50505050565b60006108c16108a7565b6000610f9d611b3e565b6001600160a01b0316635028db1a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561090d57600080fd5b61520890565b6000806000610fe8611198565b915091508060001415611000576000925050506108b4565b60008161101584670de0b6b3a7640000612667565b8161101c57fe5b04905060008061102a611826565b6001600160801b03918216935016905060006110588261105285670de0b6b3a7640000612667565b906126c0565b9093109550505050505090565b61106d612480565b6001600160a01b031661107e611aab565b6001600160a01b0316146110c7576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6001600160a01b038116611122576040805162461bcd60e51b815260206004820152601b60248201527f4554487478414d4d3a2057455448207a65726f20616464726573730000000000604482015290519081900360640190fd5b609a80546001600160a01b0319166001600160a01b038316908117909155611148612480565b6001600160a01b03167f9cfa0588ff5ff3789d20735024d004bfb8db496d5117712e136adbfe97af41d760405160405180910390a350565b60655460ff1690565b6097546001600160a01b031690565b6000806111a3610f89565b91506111b56111b0611aba565b610ac5565b90509091565b8042811015611205576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b61120d611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b15801561124557600080fd5b505afa158015611259573d6000803e3d6000fd5b505050506040513d602081101561126f57600080fd5b5051156112b1576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b60006112bc84610ac5565b905084811115611313576040805162461bcd60e51b815260206004820152601e60248201527f4554487478414d4d3a20616d6f756e74496e2065786365656473206d61780000604482015290519081900360640190fd5b610c5661131e612480565b82866001612501565b600054610100900460ff16806113405750611340612835565b8061134e575060005460ff16155b6113895760405162461bcd60e51b815260040180806020018281038252602e815260200180613136602e913960400191505060405180910390fd5b600054610100900460ff161580156113b4576000805460ff1961ff0019909116610100171660011790555b6113bc612846565b6113c46128e8565b6113cc6129e1565b6113d58661231d565b6113de85611b78565b6113e8838361093e565b6113f184611065565b6113f9611aab565b6001600160a01b0316876001600160a01b03161461141a5761141a8761221a565b801561142c576000805461ff00191690555b50505050505050565b804281101561147f576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b611487611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b1580156114bf57600080fd5b505afa1580156114d3573d6000803e3d6000fd5b505050506040513d60208110156114e957600080fd5b50511561152b576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b600061153684610dac565b90508481111561158d576040805162461bcd60e51b815260206004820152601e60248201527f4554487478414d4d3a20616d6f756e74496e2065786365656473206d61780000604482015290519081900360640190fd5b610c56611598612480565b8286612a8c565b6000806115aa610f93565b6001600160a01b031663be3945e46115c0612480565b30866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b03168152602001828152602001935050505060206040518083038186803b15801561161657600080fd5b505afa15801561162a573d6000803e3d6000fd5b505050506040513d602081101561164057600080fd5b5051905061165e61164f611b4d565b6116598584612aac565b612484565b9392505050565b61166d612480565b6001600160a01b031661167e611aab565b6001600160a01b0316146116c7576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b804281101561175b576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b611763611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b15801561179b57600080fd5b505afa1580156117af573d6000803e3d6000fd5b505050506040513d60208110156117c557600080fd5b505115611807576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b60006118128461159f565b9050610f8361181f612480565b8583612a8c565b6098546001600160801b0380821692600160801b9092041690565b611849612480565b6001600160a01b031661185a611aab565b6001600160a01b0316146118a3576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6118ab611180565b156118f0576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610daa612aee565b611900612480565b6001600160a01b0316611911611aab565b6001600160a01b03161461195a576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6119626108a7565b6001600160a01b0316836001600160a01b031614156119c8576040805162461bcd60e51b815260206004820152601d60248201527f4554487478414d4d3a2063616e6e6f74207265636f7665722057455448000000604482015290519081900360640190fd5b6119d0611b3e565b6001600160a01b0316836001600160a01b03161415611a36576040805162461bcd60e51b815260206004820152601e60248201527f4554487478414d4d3a2063616e6e6f74207265636f7665722045544874780000604482015290519081900360640190fd5b611a4a6001600160a01b0384168383612b71565b816001600160a01b0316836001600160a01b0316611a66612480565b6001600160a01b03167feaf4cea276efdcae93a52ca2f4bfdd952992169289bf655b1870a4b20bdae7d6846040518082815260200191505060405180910390a4505050565b6033546001600160a01b031690565b6000611b39611ac76108b7565b611acf611b3e565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0757600080fd5b505afa158015611b1b573d6000803e3d6000fd5b505050506040513d6020811015611b3157600080fd5b505190612aac565b905090565b6099546001600160a01b031690565b600080611b58612438565b90506000611b64610c5d565b905080821115611b72578091505b50905090565b611b80612480565b6001600160a01b0316611b91611aab565b6001600160a01b031614611bda576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6001600160a01b038116611c35576040805162461bcd60e51b815260206004820181905260248201527f4554487478414d4d3a206761734f7261636c65207a65726f2061646472657373604482015290519081900360640190fd5b609780546001600160a01b0319166001600160a01b038316908117909155611c5b612480565b6001600160a01b03167f580c76d0bfa674377787c86b7e4910624b8de2f31c4f8284196ac7ce68a3a57b60405160405180910390a350565b8042811015611cdd576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b611ce5611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b158015611d1d57600080fd5b505afa158015611d31573d6000803e3d6000fd5b505050506040513d6020811015611d4757600080fd5b505115611d89576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b6000611d948561159f565b905083811015611deb576040805162461bcd60e51b815260206004820152601d60248201527f4554487478414d4d3a20616d6f756e744f75742062656c6f77206d696e000000604482015290519081900360640190fd5b610c56611df6612480565b8683612a8c565b8042811015611e47576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b611e4f611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b158015611e8757600080fd5b505afa158015611e9b573d6000803e3d6000fd5b505050506040513d6020811015611eb157600080fd5b505115611ef3576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b6000611efd612480565b90506000611f0a85610ac5565b905034811115611f61576040805162461bcd60e51b815260206004820152601e60248201527f4554487478414d4d3a20616d6f756e74496e2065786365656473206d61780000604482015290519081900360640190fd5b611f6e8282876000612501565b80341115610c5657610c566001600160a01b03831634839003612bc3565b8042811015611fd6576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b611fde611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b15801561201657600080fd5b505afa15801561202a573d6000803e3d6000fd5b505050506040513d602081101561204057600080fd5b505115612082576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b600061208d85612207565b9050838110156120e4576040805162461bcd60e51b815260206004820152601d60248201527f4554487478414d4d3a20616d6f756e744f75742062656c6f77206d696e000000604482015290519081900360640190fd5b610c566120ef612480565b86836001612501565b8042811015612142576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b61214a611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b15801561218257600080fd5b505afa158015612196573d6000803e3d6000fd5b505050506040513d60208110156121ac57600080fd5b5051156121ee576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b3460006121fa82612207565b9050610f83610c4d612480565b6000610ae3612214612438565b836127a2565b612222612480565b6001600160a01b0316612233611aab565b6001600160a01b03161461227c576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6001600160a01b0381166122c15760405162461bcd60e51b81526004018080602001828103825260268152602001806130886026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b612325612480565b6001600160a01b0316612336611aab565b6001600160a01b03161461237f576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6001600160a01b0381166123da576040805162461bcd60e51b815260206004820152601c60248201527f4554487478414d4d3a204554487478207a65726f206164647265737300000000604482015290519081900360640190fd5b609980546001600160a01b0319166001600160a01b038316908117909155612400612480565b6001600160a01b03167f771296b6c631391f79de88226814060fdb511864a4e620f8085f4534f20b5f8460405160405180910390a350565b6000612442611189565b6001600160a01b031663fe173b976040518163ffffffff1660e01b815260040160206040518083038186803b15801561090d57600080fd5b3b151590565b3390565b600061165e670de0b6b3a764000061105261249d610fd5565b610cb18787612667565b60008282018381101561165e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061250b611b3e565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561255757600080fd5b505afa15801561256b573d6000803e3d6000fd5b505050506040513d602081101561258157600080fd5b50519050828110156125c45760405162461bcd60e51b81526004018080602001828103825260218152602001806131ef6021913960400191505060405180910390fd5b81156125ee576125e98530866125d86108a7565b6001600160a01b0316929190612ca8565b61264a565b6125f66108a7565b6001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b15801561263057600080fd5b505af1158015612644573d6000803e3d6000fd5b50505050505b610c568584612657611b3e565b6001600160a01b03169190612b71565b60008261267657506000610ae3565b8282028284828161268357fe5b041461165e5760405162461bcd60e51b81526004018080602001828103825260218152602001806131646021913960400191505060405180910390fd5b600061165e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612d02565b61270a611180565b612752576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa612785612480565b604080516001600160a01b039092168252519081900360200190a1565b6000826127f6576040805162461bcd60e51b815260206004820152601a60248201527f4554487478414d4d3a206761735072696365206973207a65726f000000000000604482015290519081900360640190fd5b600061280a83670de0b6b3a7640000612667565b90506000612820612819610fd5565b8690612667565b905061282c82826126c0565b95945050505050565b60006128403061247a565b15905090565b600054610100900460ff168061285f575061285f612835565b8061286d575060005460ff16155b6128a85760405162461bcd60e51b815260040180806020018281038252602e815260200180613136602e913960400191505060405180910390fd5b600054610100900460ff161580156128d3576000805460ff1961ff0019909116610100171660011790555b80156128e5576000805461ff00191690555b50565b600054610100900460ff16806129015750612901612835565b8061290f575060005460ff16155b61294a5760405162461bcd60e51b815260040180806020018281038252602e815260200180613136602e913960400191505060405180910390fd5b600054610100900460ff16158015612975576000805460ff1961ff0019909116610100171660011790555b600061297f612480565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156128e5576000805461ff001916905550565b600054610100900460ff16806129fa57506129fa612835565b80612a08575060005460ff16155b612a435760405162461bcd60e51b815260040180806020018281038252602e815260200180613136602e913960400191505060405180910390fd5b600054610100900460ff16158015612a6e576000805460ff1961ff0019909116610100171660011790555b6065805460ff1916905580156128e5576000805461ff001916905550565b612a9a8330846125d8611b3e565b612aa783826126576108a7565b505050565b600061165e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612da4565b612af6611180565b15612b3b576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612785612480565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052612aa7908490612dfe565b80471015612c18576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114612c63576040519150601f19603f3d011682016040523d82523d6000602084013e612c68565b606091505b5050905080612aa75760405162461bcd60e51b815260040180806020018281038252603a8152602001806130d6603a913960400191505060405180910390fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610f83908590612dfe565b60008183612d8e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d53578181015183820152602001612d3b565b50505050905090810190601f168015612d805780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612d9a57fe5b0495945050505050565b60008184841115612df65760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612d53578181015183820152602001612d3b565b505050900390565b6000612e53826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612eaf9092919063ffffffff16565b805190915015612aa757808060200190516020811015612e7257600080fd5b5051612aa75760405162461bcd60e51b815260040180806020018281038252602a815260200180613210602a913960400191505060405180910390fd5b6060612ebe8484600085612ec6565b949350505050565b606082471015612f075760405162461bcd60e51b81526004018080602001828103825260268152602001806131106026913960400191505060405180910390fd5b612f108561247a565b612f61576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310612f9f5780518252601f199092019160209182019101612f80565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613001576040519150601f19603f3d011682016040523d82523d6000602084013e613006565b606091505b5091509150613016828286613021565b979650505050505050565b6060831561303057508161165e565b8251156130405782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315612d53578181015183820152602001612d3b56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734554487478414d4d3a2074617267657443526174696f206e756d657261746f72206973207a65726f416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724554487478414d4d3a20676173207072696365206973206f75746461746564004554487478414d4d3a2074617267657443526174696f2064656e6f6d696e61746f72206973207a65726f4554487478414d4d3a206e6f7420656e6f75676820455448747820746f206275795361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220c6e2ddf39cc9874a4eac137022a6f74cd6b9e20ed657ea5ecb9463b38ce393e264736f6c634300070600334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734554487478414d4d3a2074617267657443526174696f206e756d657261746f72206973207a65726f496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e04554487478414d4d3a2074617267657443526174696f2064656e6f6d696e61746f72206973207a65726f",
  "deployedBytecode": "0x6080604052600436106102345760003560e01c80636bdb33661161012e578063a05d674f116100ab578063d96a094a1161006f578063d96a094a146107e5578063ea03798e14610802578063f2fde38b1461082c578063fa8c076f1461085f578063fe173b971461089257610296565b8063a05d674f1461070e578063a87b815214610723578063b41ac64b14610756578063c28f18211461078c578063d4995e3f146107af57610296565b80638456cb59116100f25780638456cb591461067757806386a86d411461068c5780638da5cb5b146106cf5780638f365b69146106e4578063902dd186146106f957610296565b80636bdb33661461058e57806370251eb4146105c4578063715018a6146105ee5780637cbc237314610603578063805f751a1461063357610296565b80634d6a3cfb116101bc5780635c975abb116101805780635c975abb1461049c5780635d62a8dd146104b157806365ac74db146104c657806368efb513146104f45780636b2075d71461052a57610296565b80634d6a3cfb146104015780635028db1a14610416578063546146e31461042b578063575a9d16146104405780635b769f3c1461046957610296565b80633de39c11116102035780633de39c111461034c5780633f4ba83a146103615780633fc8cef31461037657806345ef1a93146103a75780634a193c8a146103d157610296565b8063146252cb1461029b57806322f7af25146102c2578063313a7972146102ff5780633d9475501461032957610296565b36610296576102416108a7565b6001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561027b57600080fd5b505af115801561028f573d6000803e3d6000fd5b5050505050005b600080fd5b3480156102a757600080fd5b506102b06108b7565b60408051918252519081900360200190f35b3480156102ce57600080fd5b506102fd600480360360408110156102e557600080fd5b506001600160801b038135811691602001351661093e565b005b34801561030b57600080fd5b506102b06004803603602081101561032257600080fd5b5035610ac5565b6102fd6004803603604081101561033f57600080fd5b5080359060200135610ae9565b34801561035857600080fd5b506102b0610c5d565b34801561036d57600080fd5b506102fd610cf0565b34801561038257600080fd5b5061038b6108a7565b604080516001600160a01b039092168252519081900360200190f35b3480156103b357600080fd5b506102b0600480360360208110156103ca57600080fd5b5035610dac565b3480156103dd57600080fd5b506102fd600480360360408110156103f457600080fd5b5080359060200135610e6c565b34801561040d57600080fd5b506102b0610f89565b34801561042257600080fd5b5061038b610f93565b34801561043757600080fd5b506102b0610fd5565b34801561044c57600080fd5b50610455610fdb565b604080519115158252519081900360200190f35b34801561047557600080fd5b506102fd6004803603602081101561048c57600080fd5b50356001600160a01b0316611065565b3480156104a857600080fd5b50610455611180565b3480156104bd57600080fd5b5061038b611189565b3480156104d257600080fd5b506104db611198565b6040805192835260208301919091528051918290030190f35b34801561050057600080fd5b506102fd6004803603606081101561051757600080fd5b50803590602081013590604001356111bb565b34801561053657600080fd5b506102fd600480360360c081101561054d57600080fd5b506001600160a01b038135811691602081013582169160408201358116916060810135909116906001600160801b03608082013581169160a0013516611327565b34801561059a57600080fd5b506102fd600480360360608110156105b157600080fd5b5080359060208101359060400135611435565b3480156105d057600080fd5b506102b0600480360360208110156105e757600080fd5b503561159f565b3480156105fa57600080fd5b506102fd611665565b34801561060f57600080fd5b506102fd6004803603604081101561062657600080fd5b5080359060200135611711565b34801561063f57600080fd5b50610648611826565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b34801561068357600080fd5b506102fd611841565b34801561069857600080fd5b506102fd600480360360608110156106af57600080fd5b506001600160a01b038135811691602081013590911690604001356118f8565b3480156106db57600080fd5b5061038b611aab565b3480156106f057600080fd5b506102b0611aba565b34801561070557600080fd5b5061038b611b3e565b34801561071a57600080fd5b506102b0611b4d565b34801561072f57600080fd5b506102fd6004803603602081101561074657600080fd5b50356001600160a01b0316611b78565b34801561076257600080fd5b506102fd6004803603606081101561077957600080fd5b5080359060208101359060400135611c93565b6102fd600480360360408110156107a257600080fd5b5080359060200135611dfd565b3480156107bb57600080fd5b506102fd600480360360608110156107d257600080fd5b5080359060208101359060400135611f8c565b6102fd600480360360208110156107fb57600080fd5b50356120f8565b34801561080e57600080fd5b506102b06004803603602081101561082557600080fd5b5035612207565b34801561083857600080fd5b506102fd6004803603602081101561084f57600080fd5b50356001600160a01b031661221a565b34801561086b57600080fd5b506102fd6004803603602081101561088257600080fd5b50356001600160a01b031661231d565b34801561089e57600080fd5b506102b0612438565b609a546001600160a01b03165b90565b60006108c1611b3e565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561090d57600080fd5b505afa158015610921573d6000803e3d6000fd5b505050506040513d602081101561093757600080fd5b5051905090565b610946612480565b6001600160a01b0316610957611aab565b6001600160a01b0316146109a0576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6001600160801b0382166109e55760405162461bcd60e51b81526004018080602001828103825260288152602001806130ae6028913960400191505060405180910390fd5b6001600160801b038116610a2a5760405162461bcd60e51b815260040180806020018281038252602a8152602001806131c5602a913960400191505060405180910390fd5b609880546001600160801b03838116600160801b028186166fffffffffffffffffffffffffffffffff199093169290921716179055610a67612480565b6001600160a01b03167f9af9b815b340cc536d9c60d950fdae6e7d2932ec908595257787b6a7f4dec372838360405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390a25050565b6000610ae36001610add610ad7612438565b85612484565b906124a7565b92915050565b8042811015610b33576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b610b3b611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7357600080fd5b505afa158015610b87573d6000803e3d6000fd5b505050506040513d6020811015610b9d57600080fd5b505115610bdf576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b346000610beb82612207565b905084811015610c42576040805162461bcd60e51b815260206004820152601d60248201527f4554487478414d4d3a20616d6f756e744f75742062656c6f77206d696e000000604482015290519081900360640190fd5b610c56610c4d612480565b83836000612501565b5050505050565b600080610c68611aba565b905080610c7f57610c77612438565b9150506108b4565b600080610c8a611826565b915091506000610cb7826001600160801b0316610cb1670de0b6b3a7640000610cb1610f89565b90612667565b90506000610cda846001600160801b0316610cb1610cd3610fd5565b8890612667565b9050610ce682826126c0565b9550505050505090565b610cf8612480565b6001600160a01b0316610d09611aab565b6001600160a01b031614610d52576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b610d5a611180565b610da2576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b610daa612702565b565b600080610dc0610dba611b4d565b846127a2565b90506000610dcc610f93565b6001600160a01b031663063f384f610de2612480565b30856040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b03168152602001828152602001935050505060206040518083038186803b158015610e3857600080fd5b505afa158015610e4c573d6000803e3d6000fd5b505050506040513d6020811015610e6257600080fd5b5051949350505050565b8042811015610eb6576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b610ebe611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b158015610ef657600080fd5b505afa158015610f0a573d6000803e3d6000fd5b505050506040513d6020811015610f2057600080fd5b505115610f62576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b6000610f6d84612207565b9050610f83610f7a612480565b85836001612501565b50505050565b60006108c16108a7565b6000610f9d611b3e565b6001600160a01b0316635028db1a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561090d57600080fd5b61520890565b6000806000610fe8611198565b915091508060001415611000576000925050506108b4565b60008161101584670de0b6b3a7640000612667565b8161101c57fe5b04905060008061102a611826565b6001600160801b03918216935016905060006110588261105285670de0b6b3a7640000612667565b906126c0565b9093109550505050505090565b61106d612480565b6001600160a01b031661107e611aab565b6001600160a01b0316146110c7576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6001600160a01b038116611122576040805162461bcd60e51b815260206004820152601b60248201527f4554487478414d4d3a2057455448207a65726f20616464726573730000000000604482015290519081900360640190fd5b609a80546001600160a01b0319166001600160a01b038316908117909155611148612480565b6001600160a01b03167f9cfa0588ff5ff3789d20735024d004bfb8db496d5117712e136adbfe97af41d760405160405180910390a350565b60655460ff1690565b6097546001600160a01b031690565b6000806111a3610f89565b91506111b56111b0611aba565b610ac5565b90509091565b8042811015611205576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b61120d611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b15801561124557600080fd5b505afa158015611259573d6000803e3d6000fd5b505050506040513d602081101561126f57600080fd5b5051156112b1576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b60006112bc84610ac5565b905084811115611313576040805162461bcd60e51b815260206004820152601e60248201527f4554487478414d4d3a20616d6f756e74496e2065786365656473206d61780000604482015290519081900360640190fd5b610c5661131e612480565b82866001612501565b600054610100900460ff16806113405750611340612835565b8061134e575060005460ff16155b6113895760405162461bcd60e51b815260040180806020018281038252602e815260200180613136602e913960400191505060405180910390fd5b600054610100900460ff161580156113b4576000805460ff1961ff0019909116610100171660011790555b6113bc612846565b6113c46128e8565b6113cc6129e1565b6113d58661231d565b6113de85611b78565b6113e8838361093e565b6113f184611065565b6113f9611aab565b6001600160a01b0316876001600160a01b03161461141a5761141a8761221a565b801561142c576000805461ff00191690555b50505050505050565b804281101561147f576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b611487611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b1580156114bf57600080fd5b505afa1580156114d3573d6000803e3d6000fd5b505050506040513d60208110156114e957600080fd5b50511561152b576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b600061153684610dac565b90508481111561158d576040805162461bcd60e51b815260206004820152601e60248201527f4554487478414d4d3a20616d6f756e74496e2065786365656473206d61780000604482015290519081900360640190fd5b610c56611598612480565b8286612a8c565b6000806115aa610f93565b6001600160a01b031663be3945e46115c0612480565b30866040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b03168152602001828152602001935050505060206040518083038186803b15801561161657600080fd5b505afa15801561162a573d6000803e3d6000fd5b505050506040513d602081101561164057600080fd5b5051905061165e61164f611b4d565b6116598584612aac565b612484565b9392505050565b61166d612480565b6001600160a01b031661167e611aab565b6001600160a01b0316146116c7576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b804281101561175b576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b611763611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b15801561179b57600080fd5b505afa1580156117af573d6000803e3d6000fd5b505050506040513d60208110156117c557600080fd5b505115611807576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b60006118128461159f565b9050610f8361181f612480565b8583612a8c565b6098546001600160801b0380821692600160801b9092041690565b611849612480565b6001600160a01b031661185a611aab565b6001600160a01b0316146118a3576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6118ab611180565b156118f0576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610daa612aee565b611900612480565b6001600160a01b0316611911611aab565b6001600160a01b03161461195a576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6119626108a7565b6001600160a01b0316836001600160a01b031614156119c8576040805162461bcd60e51b815260206004820152601d60248201527f4554487478414d4d3a2063616e6e6f74207265636f7665722057455448000000604482015290519081900360640190fd5b6119d0611b3e565b6001600160a01b0316836001600160a01b03161415611a36576040805162461bcd60e51b815260206004820152601e60248201527f4554487478414d4d3a2063616e6e6f74207265636f7665722045544874780000604482015290519081900360640190fd5b611a4a6001600160a01b0384168383612b71565b816001600160a01b0316836001600160a01b0316611a66612480565b6001600160a01b03167feaf4cea276efdcae93a52ca2f4bfdd952992169289bf655b1870a4b20bdae7d6846040518082815260200191505060405180910390a4505050565b6033546001600160a01b031690565b6000611b39611ac76108b7565b611acf611b3e565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0757600080fd5b505afa158015611b1b573d6000803e3d6000fd5b505050506040513d6020811015611b3157600080fd5b505190612aac565b905090565b6099546001600160a01b031690565b600080611b58612438565b90506000611b64610c5d565b905080821115611b72578091505b50905090565b611b80612480565b6001600160a01b0316611b91611aab565b6001600160a01b031614611bda576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6001600160a01b038116611c35576040805162461bcd60e51b815260206004820181905260248201527f4554487478414d4d3a206761734f7261636c65207a65726f2061646472657373604482015290519081900360640190fd5b609780546001600160a01b0319166001600160a01b038316908117909155611c5b612480565b6001600160a01b03167f580c76d0bfa674377787c86b7e4910624b8de2f31c4f8284196ac7ce68a3a57b60405160405180910390a350565b8042811015611cdd576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b611ce5611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b158015611d1d57600080fd5b505afa158015611d31573d6000803e3d6000fd5b505050506040513d6020811015611d4757600080fd5b505115611d89576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b6000611d948561159f565b905083811015611deb576040805162461bcd60e51b815260206004820152601d60248201527f4554487478414d4d3a20616d6f756e744f75742062656c6f77206d696e000000604482015290519081900360640190fd5b610c56611df6612480565b8683612a8c565b8042811015611e47576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b611e4f611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b158015611e8757600080fd5b505afa158015611e9b573d6000803e3d6000fd5b505050506040513d6020811015611eb157600080fd5b505115611ef3576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b6000611efd612480565b90506000611f0a85610ac5565b905034811115611f61576040805162461bcd60e51b815260206004820152601e60248201527f4554487478414d4d3a20616d6f756e74496e2065786365656473206d61780000604482015290519081900360640190fd5b611f6e8282876000612501565b80341115610c5657610c566001600160a01b03831634839003612bc3565b8042811015611fd6576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b611fde611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b15801561201657600080fd5b505afa15801561202a573d6000803e3d6000fd5b505050506040513d602081101561204057600080fd5b505115612082576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b600061208d85612207565b9050838110156120e4576040805162461bcd60e51b815260206004820152601d60248201527f4554487478414d4d3a20616d6f756e744f75742062656c6f77206d696e000000604482015290519081900360640190fd5b610c566120ef612480565b86836001612501565b8042811015612142576040805162461bcd60e51b81526020600482015260116024820152701155121d1e1053534e88195e1c1a5c9959607a1b604482015290519081900360640190fd5b61214a611189565b6001600160a01b0316639e2437146040518163ffffffff1660e01b815260040160206040518083038186803b15801561218257600080fd5b505afa158015612196573d6000803e3d6000fd5b505050506040513d60208110156121ac57600080fd5b5051156121ee576040805162461bcd60e51b815260206004820152601f60248201526000805160206131a5833981519152604482015290519081900360640190fd5b3460006121fa82612207565b9050610f83610c4d612480565b6000610ae3612214612438565b836127a2565b612222612480565b6001600160a01b0316612233611aab565b6001600160a01b03161461227c576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6001600160a01b0381166122c15760405162461bcd60e51b81526004018080602001828103825260268152602001806130886026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b612325612480565b6001600160a01b0316612336611aab565b6001600160a01b03161461237f576040805162461bcd60e51b81526020600482018190526024820152600080516020613185833981519152604482015290519081900360640190fd5b6001600160a01b0381166123da576040805162461bcd60e51b815260206004820152601c60248201527f4554487478414d4d3a204554487478207a65726f206164647265737300000000604482015290519081900360640190fd5b609980546001600160a01b0319166001600160a01b038316908117909155612400612480565b6001600160a01b03167f771296b6c631391f79de88226814060fdb511864a4e620f8085f4534f20b5f8460405160405180910390a350565b6000612442611189565b6001600160a01b031663fe173b976040518163ffffffff1660e01b815260040160206040518083038186803b15801561090d57600080fd5b3b151590565b3390565b600061165e670de0b6b3a764000061105261249d610fd5565b610cb18787612667565b60008282018381101561165e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061250b611b3e565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561255757600080fd5b505afa15801561256b573d6000803e3d6000fd5b505050506040513d602081101561258157600080fd5b50519050828110156125c45760405162461bcd60e51b81526004018080602001828103825260218152602001806131ef6021913960400191505060405180910390fd5b81156125ee576125e98530866125d86108a7565b6001600160a01b0316929190612ca8565b61264a565b6125f66108a7565b6001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004016000604051808303818588803b15801561263057600080fd5b505af1158015612644573d6000803e3d6000fd5b50505050505b610c568584612657611b3e565b6001600160a01b03169190612b71565b60008261267657506000610ae3565b8282028284828161268357fe5b041461165e5760405162461bcd60e51b81526004018080602001828103825260218152602001806131646021913960400191505060405180910390fd5b600061165e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612d02565b61270a611180565b612752576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa612785612480565b604080516001600160a01b039092168252519081900360200190a1565b6000826127f6576040805162461bcd60e51b815260206004820152601a60248201527f4554487478414d4d3a206761735072696365206973207a65726f000000000000604482015290519081900360640190fd5b600061280a83670de0b6b3a7640000612667565b90506000612820612819610fd5565b8690612667565b905061282c82826126c0565b95945050505050565b60006128403061247a565b15905090565b600054610100900460ff168061285f575061285f612835565b8061286d575060005460ff16155b6128a85760405162461bcd60e51b815260040180806020018281038252602e815260200180613136602e913960400191505060405180910390fd5b600054610100900460ff161580156128d3576000805460ff1961ff0019909116610100171660011790555b80156128e5576000805461ff00191690555b50565b600054610100900460ff16806129015750612901612835565b8061290f575060005460ff16155b61294a5760405162461bcd60e51b815260040180806020018281038252602e815260200180613136602e913960400191505060405180910390fd5b600054610100900460ff16158015612975576000805460ff1961ff0019909116610100171660011790555b600061297f612480565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156128e5576000805461ff001916905550565b600054610100900460ff16806129fa57506129fa612835565b80612a08575060005460ff16155b612a435760405162461bcd60e51b815260040180806020018281038252602e815260200180613136602e913960400191505060405180910390fd5b600054610100900460ff16158015612a6e576000805460ff1961ff0019909116610100171660011790555b6065805460ff1916905580156128e5576000805461ff001916905550565b612a9a8330846125d8611b3e565b612aa783826126576108a7565b505050565b600061165e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612da4565b612af6611180565b15612b3b576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612785612480565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052612aa7908490612dfe565b80471015612c18576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114612c63576040519150601f19603f3d011682016040523d82523d6000602084013e612c68565b606091505b5050905080612aa75760405162461bcd60e51b815260040180806020018281038252603a8152602001806130d6603a913960400191505060405180910390fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610f83908590612dfe565b60008183612d8e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d53578181015183820152602001612d3b565b50505050905090810190601f168015612d805780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612d9a57fe5b0495945050505050565b60008184841115612df65760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612d53578181015183820152602001612d3b565b505050900390565b6000612e53826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612eaf9092919063ffffffff16565b805190915015612aa757808060200190516020811015612e7257600080fd5b5051612aa75760405162461bcd60e51b815260040180806020018281038252602a815260200180613210602a913960400191505060405180910390fd5b6060612ebe8484600085612ec6565b949350505050565b606082471015612f075760405162461bcd60e51b81526004018080602001828103825260268152602001806131106026913960400191505060405180910390fd5b612f108561247a565b612f61576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310612f9f5780518252601f199092019160209182019101612f80565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613001576040519150601f19603f3d011682016040523d82523d6000602084013e613006565b606091505b5091509150613016828286613021565b979650505050505050565b6060831561303057508161165e565b8251156130405782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315612d53578181015183820152602001612d3b56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734554487478414d4d3a2074617267657443526174696f206e756d657261746f72206973207a65726f416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724554487478414d4d3a20676173207072696365206973206f75746461746564004554487478414d4d3a2074617267657443526174696f2064656e6f6d696e61746f72206973207a65726f4554487478414d4d3a206e6f7420656e6f75676820455448747820746f206275795361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220c6e2ddf39cc9874a4eac137022a6f74cd6b9e20ed657ea5ecb9463b38ce393e264736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 137,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 140,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 484,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 129,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 506,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "_paused",
        "offset": 0,
        "slot": "101",
        "type": "t_bool"
      },
      {
        "astId": 597,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 5261,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "_gasOracle",
        "offset": 0,
        "slot": "151",
        "type": "t_address"
      },
      {
        "astId": 5263,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "_targetCRatioNum",
        "offset": 0,
        "slot": "152",
        "type": "t_uint128"
      },
      {
        "astId": 5265,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "_targetCRatioDen",
        "offset": 16,
        "slot": "152",
        "type": "t_uint128"
      },
      {
        "astId": 5267,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "_ethtx",
        "offset": 0,
        "slot": "153",
        "type": "t_address"
      },
      {
        "astId": 5269,
        "contract": "contracts/exchanges/ETHtxAMM/ETHtxAMM.sol:ETHtxAMM",
        "label": "_weth",
        "offset": 0,
        "slot": "154",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}